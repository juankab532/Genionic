/*
 * generated by Xtext
 */
grammar InternalIsml;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package co.edu.javeriana.isml.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package co.edu.javeriana.isml.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import co.edu.javeriana.isml.services.IsmlGrammarAccess;

}

@parser::members {
 
 	private IsmlGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(IsmlGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleInformationSystem
entryRuleInformationSystem 
:
{ before(grammarAccess.getInformationSystemRule()); }
	 ruleInformationSystem
{ after(grammarAccess.getInformationSystemRule()); } 
	 EOF 
;

// Rule InformationSystem
ruleInformationSystem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getInformationSystemAccess().getBodyAssignment()); }
(rule__InformationSystem__BodyAssignment)
{ after(grammarAccess.getInformationSystemAccess().getBodyAssignment()); }
)
(
{ before(grammarAccess.getInformationSystemAccess().getBodyAssignment()); }
(rule__InformationSystem__BodyAssignment)*
{ after(grammarAccess.getInformationSystemAccess().getBodyAssignment()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackage
entryRulePackage 
:
{ before(grammarAccess.getPackageRule()); }
	 rulePackage
{ after(grammarAccess.getPackageRule()); } 
	 EOF 
;

// Rule Package
rulePackage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageAccess().getGroup()); }
(rule__Package__Group__0)
{ after(grammarAccess.getPackageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResource
entryRuleResource 
:
{ before(grammarAccess.getResourceRule()); }
	 ruleResource
{ after(grammarAccess.getResourceRule()); } 
	 EOF 
;

// Rule Resource
ruleResource
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getResourceAccess().getGroup()); }
(rule__Resource__Group__0)
{ after(grammarAccess.getResourceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResourceBundle
entryRuleResourceBundle 
:
{ before(grammarAccess.getResourceBundleRule()); }
	 ruleResourceBundle
{ after(grammarAccess.getResourceBundleRule()); } 
	 EOF 
;

// Rule ResourceBundle
ruleResourceBundle
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getResourceBundleAccess().getGroup()); }
(rule__ResourceBundle__Group__0)
{ after(grammarAccess.getResourceBundleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResourceAssignment
entryRuleResourceAssignment 
:
{ before(grammarAccess.getResourceAssignmentRule()); }
	 ruleResourceAssignment
{ after(grammarAccess.getResourceAssignmentRule()); } 
	 EOF 
;

// Rule ResourceAssignment
ruleResourceAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getResourceAssignmentAccess().getGroup()); }
(rule__ResourceAssignment__Group__0)
{ after(grammarAccess.getResourceAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntity
entryRuleEntity 
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityAccess().getGroup()); }
(rule__Entity__Group__0)
{ after(grammarAccess.getEntityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttribute
entryRuleAttribute 
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeAccess().getGroup()); }
(rule__Attribute__Group__0)
{ after(grammarAccess.getAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDTO
entryRuleDTO 
:
{ before(grammarAccess.getDTORule()); }
	 ruleDTO
{ after(grammarAccess.getDTORule()); } 
	 EOF 
;

// Rule DTO
ruleDTO
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDTOAccess().getGroup()); }
(rule__DTO__Group__0)
{ after(grammarAccess.getDTOAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDTOAttribute
entryRuleDTOAttribute 
:
{ before(grammarAccess.getDTOAttributeRule()); }
	 ruleDTOAttribute
{ after(grammarAccess.getDTOAttributeRule()); } 
	 EOF 
;

// Rule DTOAttribute
ruleDTOAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDTOAttributeAccess().getGroup()); }
(rule__DTOAttribute__Group__0)
{ after(grammarAccess.getDTOAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnum
entryRuleEnum 
:
{ before(grammarAccess.getEnumRule()); }
	 ruleEnum
{ after(grammarAccess.getEnumRule()); } 
	 EOF 
;

// Rule Enum
ruleEnum
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumAccess().getGroup()); }
(rule__Enum__Group__0)
{ after(grammarAccess.getEnumAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumItem
entryRuleEnumItem 
:
{ before(grammarAccess.getEnumItemRule()); }
	 ruleEnumItem
{ after(grammarAccess.getEnumItemRule()); } 
	 EOF 
;

// Rule EnumItem
ruleEnumItem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumItemAccess().getNameAssignment()); }
(rule__EnumItem__NameAssignment)
{ after(grammarAccess.getEnumItemAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterizedType
entryRuleParameterizedType 
:
{ before(grammarAccess.getParameterizedTypeRule()); }
	 ruleParameterizedType
{ after(grammarAccess.getParameterizedTypeRule()); } 
	 EOF 
;

// Rule ParameterizedType
ruleParameterizedType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterizedTypeAccess().getGroup()); }
(rule__ParameterizedType__Group__0)
{ after(grammarAccess.getParameterizedTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleType
entryRuleSimpleType 
:
{ before(grammarAccess.getSimpleTypeRule()); }
	 ruleSimpleType
{ after(grammarAccess.getSimpleTypeRule()); } 
	 EOF 
;

// Rule SimpleType
ruleSimpleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleTypeAccess().getReferencedElementAssignment()); }
(rule__SimpleType__ReferencedElementAssignment)
{ after(grammarAccess.getSimpleTypeAccess().getReferencedElementAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleConstraintInstance
entryRuleConstraintInstance 
:
{ before(grammarAccess.getConstraintInstanceRule()); }
	 ruleConstraintInstance
{ after(grammarAccess.getConstraintInstanceRule()); } 
	 EOF 
;

// Rule ConstraintInstance
ruleConstraintInstance
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstraintInstanceAccess().getGroup()); }
(rule__ConstraintInstance__Group__0)
{ after(grammarAccess.getConstraintInstanceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstraintType
entryRuleConstraintType 
:
{ before(grammarAccess.getConstraintTypeRule()); }
	 ruleConstraintType
{ after(grammarAccess.getConstraintTypeRule()); } 
	 EOF 
;

// Rule ConstraintType
ruleConstraintType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstraintTypeAccess().getReferencedElementAssignment()); }
(rule__ConstraintType__ReferencedElementAssignment)
{ after(grammarAccess.getConstraintTypeAccess().getReferencedElementAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimitive
entryRulePrimitive 
:
{ before(grammarAccess.getPrimitiveRule()); }
	 rulePrimitive
{ after(grammarAccess.getPrimitiveRule()); } 
	 EOF 
;

// Rule Primitive
rulePrimitive
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimitiveAccess().getGroup()); }
(rule__Primitive__Group__0)
{ after(grammarAccess.getPrimitiveAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGenericTypeSpecification
entryRuleGenericTypeSpecification 
:
{ before(grammarAccess.getGenericTypeSpecificationRule()); }
	 ruleGenericTypeSpecification
{ after(grammarAccess.getGenericTypeSpecificationRule()); } 
	 EOF 
;

// Rule GenericTypeSpecification
ruleGenericTypeSpecification
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGenericTypeSpecificationAccess().getGroup()); }
(rule__GenericTypeSpecification__Group__0)
{ after(grammarAccess.getGenericTypeSpecificationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleService
entryRuleService 
:
{ before(grammarAccess.getServiceRule()); }
	 ruleService
{ after(grammarAccess.getServiceRule()); } 
	 EOF 
;

// Rule Service
ruleService
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getServiceAccess().getGroup()); }
(rule__Service__Group__0)
{ after(grammarAccess.getServiceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeature
entryRuleFeature 
:
{ before(grammarAccess.getFeatureRule()); }
	 ruleFeature
{ after(grammarAccess.getFeatureRule()); } 
	 EOF 
;

// Rule Feature
ruleFeature
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureAccess().getAlternatives()); }
(rule__Feature__Alternatives)
{ after(grammarAccess.getFeatureAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethod
entryRuleMethod 
:
{ before(grammarAccess.getMethodRule()); }
	 ruleMethod
{ after(grammarAccess.getMethodRule()); } 
	 EOF 
;

// Rule Method
ruleMethod
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodAccess().getAlternatives()); }
(rule__Method__Alternatives)
{ after(grammarAccess.getMethodAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNativeMethod
entryRuleNativeMethod 
:
{ before(grammarAccess.getNativeMethodRule()); }
	 ruleNativeMethod
{ after(grammarAccess.getNativeMethodRule()); } 
	 EOF 
;

// Rule NativeMethod
ruleNativeMethod
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNativeMethodAccess().getGroup()); }
(rule__NativeMethod__Group__0)
{ after(grammarAccess.getNativeMethodAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRegularMethod
entryRuleRegularMethod 
:
{ before(grammarAccess.getRegularMethodRule()); }
	 ruleRegularMethod
{ after(grammarAccess.getRegularMethodRule()); } 
	 EOF 
;

// Rule RegularMethod
ruleRegularMethod
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRegularMethodAccess().getGroup()); }
(rule__RegularMethod__Group__0)
{ after(grammarAccess.getRegularMethodAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleServiceAttribute
entryRuleServiceAttribute 
:
{ before(grammarAccess.getServiceAttributeRule()); }
	 ruleServiceAttribute
{ after(grammarAccess.getServiceAttributeRule()); } 
	 EOF 
;

// Rule ServiceAttribute
ruleServiceAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getServiceAttributeAccess().getGroup()); }
(rule__ServiceAttribute__Group__0)
{ after(grammarAccess.getServiceAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleController
entryRuleController 
:
{ before(grammarAccess.getControllerRule()); }
	 ruleController
{ after(grammarAccess.getControllerRule()); } 
	 EOF 
;

// Rule Controller
ruleController
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getControllerAccess().getGroup()); }
(rule__Controller__Group__0)
{ after(grammarAccess.getControllerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAction
entryRuleAction 
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionAccess().getAlternatives()); }
(rule__Action__Alternatives)
{ after(grammarAccess.getActionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstraint
entryRuleConstraint 
:
{ before(grammarAccess.getConstraintRule()); }
	 ruleConstraint
{ after(grammarAccess.getConstraintRule()); } 
	 EOF 
;

// Rule Constraint
ruleConstraint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstraintAccess().getGroup()); }
(rule__Constraint__Group__0)
{ after(grammarAccess.getConstraintAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActor
entryRuleActor 
:
{ before(grammarAccess.getActorRule()); }
	 ruleActor
{ after(grammarAccess.getActorRule()); } 
	 EOF 
;

// Rule Actor
ruleActor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActorAccess().getGroup()); }
(rule__Actor__Group__0)
{ after(grammarAccess.getActorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleActionCall
entryRuleActionCall 
:
{ before(grammarAccess.getActionCallRule()); }
	 ruleActionCall
{ after(grammarAccess.getActionCallRule()); } 
	 EOF 
;

// Rule ActionCall
ruleActionCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionCallAccess().getGroup()); }
(rule__ActionCall__Group__0)
{ after(grammarAccess.getActionCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActionCallStatement
entryRuleActionCallStatement 
:
{ before(grammarAccess.getActionCallStatementRule()); }
	 ruleActionCallStatement
{ after(grammarAccess.getActionCallStatementRule()); } 
	 EOF 
;

// Rule ActionCallStatement
ruleActionCallStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionCallStatementAccess().getGroup()); }
(rule__ActionCallStatement__Group__0)
{ after(grammarAccess.getActionCallStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleView
entryRuleView 
:
{ before(grammarAccess.getViewRule()); }
	 ruleView
{ after(grammarAccess.getViewRule()); } 
	 EOF 
;

// Rule View
ruleView
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getViewAccess().getAlternatives()); }
(rule__View__Alternatives)
{ after(grammarAccess.getViewAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePage
entryRulePage 
:
{ before(grammarAccess.getPageRule()); }
	 rulePage
{ after(grammarAccess.getPageRule()); } 
	 EOF 
;

// Rule Page
rulePage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPageAccess().getGroup()); }
(rule__Page__Group__0)
{ after(grammarAccess.getPageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWidget
entryRuleWidget 
:
{ before(grammarAccess.getWidgetRule()); }
	 ruleWidget
{ after(grammarAccess.getWidgetRule()); } 
	 EOF 
;

// Rule Widget
ruleWidget
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWidgetAccess().getGroup()); }
(rule__Widget__Group__0)
{ after(grammarAccess.getWidgetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleViewStatement
entryRuleViewStatement 
:
{ before(grammarAccess.getViewStatementRule()); }
	 ruleViewStatement
{ after(grammarAccess.getViewStatementRule()); } 
	 EOF 
;

// Rule ViewStatement
ruleViewStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getViewStatementAccess().getAlternatives()); }
(rule__ViewStatement__Alternatives)
{ after(grammarAccess.getViewStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfView
entryRuleIfView 
:
{ before(grammarAccess.getIfViewRule()); }
	 ruleIfView
{ after(grammarAccess.getIfViewRule()); } 
	 EOF 
;

// Rule IfView
ruleIfView
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfViewAccess().getGroup()); }
(rule__IfView__Group__0)
{ after(grammarAccess.getIfViewAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForView
entryRuleForView 
:
{ before(grammarAccess.getForViewRule()); }
	 ruleForView
{ after(grammarAccess.getForViewRule()); } 
	 EOF 
;

// Rule ForView
ruleForView
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForViewAccess().getGroup()); }
(rule__ForView__Group__0)
{ after(grammarAccess.getForViewAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForVariable
entryRuleForVariable 
:
{ before(grammarAccess.getForVariableRule()); }
	 ruleForVariable
{ after(grammarAccess.getForVariableRule()); } 
	 EOF 
;

// Rule ForVariable
ruleForVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForVariableAccess().getGroup()); }
(rule__ForVariable__Group__0)
{ after(grammarAccess.getForVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleViewInstanceNoAction
entryRuleViewInstanceNoAction 
:
{ before(grammarAccess.getViewInstanceNoActionRule()); }
	 ruleViewInstanceNoAction
{ after(grammarAccess.getViewInstanceNoActionRule()); } 
	 EOF 
;

// Rule ViewInstanceNoAction
ruleViewInstanceNoAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getViewInstanceNoActionAccess().getGroup()); }
(rule__ViewInstanceNoAction__Group__0)
{ after(grammarAccess.getViewInstanceNoActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleViewInstance
entryRuleViewInstance 
:
{ before(grammarAccess.getViewInstanceRule()); }
	 ruleViewInstance
{ after(grammarAccess.getViewInstanceRule()); } 
	 EOF 
;

// Rule ViewInstance
ruleViewInstance
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getViewInstanceAccess().getGroup()); }
(rule__ViewInstance__Group__0)
{ after(grammarAccess.getViewInstanceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamedViewBlock
entryRuleNamedViewBlock 
:
{ before(grammarAccess.getNamedViewBlockRule()); }
	 ruleNamedViewBlock
{ after(grammarAccess.getNamedViewBlockRule()); } 
	 EOF 
;

// Rule NamedViewBlock
ruleNamedViewBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamedViewBlockAccess().getGroup()); }
(rule__NamedViewBlock__Group__0)
{ after(grammarAccess.getNamedViewBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWidgetType
entryRuleWidgetType 
:
{ before(grammarAccess.getWidgetTypeRule()); }
	 ruleWidgetType
{ after(grammarAccess.getWidgetTypeRule()); } 
	 EOF 
;

// Rule WidgetType
ruleWidgetType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWidgetTypeAccess().getReferencedElementAssignment()); }
(rule__WidgetType__ReferencedElementAssignment)
{ after(grammarAccess.getWidgetTypeAccess().getReferencedElementAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodStatement
entryRuleMethodStatement 
:
{ before(grammarAccess.getMethodStatementRule()); }
	 ruleMethodStatement
{ after(grammarAccess.getMethodStatementRule()); } 
	 EOF 
;

// Rule MethodStatement
ruleMethodStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodStatementAccess().getAlternatives()); }
(rule__MethodStatement__Alternatives)
{ after(grammarAccess.getMethodStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReferenceStatement
entryRuleReferenceStatement 
:
{ before(grammarAccess.getReferenceStatementRule()); }
	 ruleReferenceStatement
{ after(grammarAccess.getReferenceStatementRule()); } 
	 EOF 
;

// Rule ReferenceStatement
ruleReferenceStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferenceStatementAccess().getGroup()); }
(rule__ReferenceStatement__Group__0)
{ after(grammarAccess.getReferenceStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIf
entryRuleIf 
:
{ before(grammarAccess.getIfRule()); }
	 ruleIf
{ after(grammarAccess.getIfRule()); } 
	 EOF 
;

// Rule If
ruleIf
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfAccess().getGroup()); }
(rule__If__Group__0)
{ after(grammarAccess.getIfAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhile
entryRuleWhile 
:
{ before(grammarAccess.getWhileRule()); }
	 ruleWhile
{ after(grammarAccess.getWhileRule()); } 
	 EOF 
;

// Rule While
ruleWhile
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhileAccess().getGroup()); }
(rule__While__Group__0)
{ after(grammarAccess.getWhileAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFor
entryRuleFor 
:
{ before(grammarAccess.getForRule()); }
	 ruleFor
{ after(grammarAccess.getForRule()); } 
	 EOF 
;

// Rule For
ruleFor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForAccess().getGroup()); }
(rule__For__Group__0)
{ after(grammarAccess.getForAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable
entryRuleVariable 
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccess().getGroup()); }
(rule__Variable__Group__0)
{ after(grammarAccess.getVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleShow
entryRuleShow 
:
{ before(grammarAccess.getShowRule()); }
	 ruleShow
{ after(grammarAccess.getShowRule()); } 
	 EOF 
;

// Rule Show
ruleShow
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getShowAccess().getGroup()); }
(rule__Show__Group__0)
{ after(grammarAccess.getShowAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getGroup()); }
(rule__Expression__Group__0)
{ after(grammarAccess.getExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBoolTerm
entryRuleBoolTerm 
:
{ before(grammarAccess.getBoolTermRule()); }
	 ruleBoolTerm
{ after(grammarAccess.getBoolTermRule()); } 
	 EOF 
;

// Rule BoolTerm
ruleBoolTerm
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBoolTermAccess().getGroup()); }
(rule__BoolTerm__Group__0)
{ after(grammarAccess.getBoolTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNegation
entryRuleNegation 
:
{ before(grammarAccess.getNegationRule()); }
	 ruleNegation
{ after(grammarAccess.getNegationRule()); } 
	 EOF 
;

// Rule Negation
ruleNegation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNegationAccess().getAlternatives()); }
(rule__Negation__Alternatives)
{ after(grammarAccess.getNegationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComparison
entryRuleComparison 
:
{ before(grammarAccess.getComparisonRule()); }
	 ruleComparison
{ after(grammarAccess.getComparisonRule()); } 
	 EOF 
;

// Rule Comparison
ruleComparison
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComparisonAccess().getGroup()); }
(rule__Comparison__Group__0)
{ after(grammarAccess.getComparisonAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArithmeticExpression
entryRuleArithmeticExpression 
:
{ before(grammarAccess.getArithmeticExpressionRule()); }
	 ruleArithmeticExpression
{ after(grammarAccess.getArithmeticExpressionRule()); } 
	 EOF 
;

// Rule ArithmeticExpression
ruleArithmeticExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArithmeticExpressionAccess().getGroup()); }
(rule__ArithmeticExpression__Group__0)
{ after(grammarAccess.getArithmeticExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTerm
entryRuleTerm 
:
{ before(grammarAccess.getTermRule()); }
	 ruleTerm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule Term
ruleTerm
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTermAccess().getGroup()); }
(rule__Term__Group__0)
{ after(grammarAccess.getTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNegative
entryRuleNegative 
:
{ before(grammarAccess.getNegativeRule()); }
	 ruleNegative
{ after(grammarAccess.getNegativeRule()); } 
	 EOF 
;

// Rule Negative
ruleNegative
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNegativeAccess().getAlternatives()); }
(rule__Negative__Alternatives)
{ after(grammarAccess.getNegativeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFactor
entryRuleFactor 
:
{ before(grammarAccess.getFactorRule()); }
	 ruleFactor
{ after(grammarAccess.getFactorRule()); } 
	 EOF 
;

// Rule Factor
ruleFactor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFactorAccess().getAlternatives()); }
(rule__Factor__Alternatives)
{ after(grammarAccess.getFactorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructInstance
entryRuleStructInstance 
:
{ before(grammarAccess.getStructInstanceRule()); }
	 ruleStructInstance
{ after(grammarAccess.getStructInstanceRule()); } 
	 EOF 
;

// Rule StructInstance
ruleStructInstance
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructInstanceAccess().getGroup()); }
(rule__StructInstance__Group__0)
{ after(grammarAccess.getStructInstanceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReference
entryRuleReference 
:
{ before(grammarAccess.getReferenceRule()); }
	 ruleReference
{ after(grammarAccess.getReferenceRule()); } 
	 EOF 
;

// Rule Reference
ruleReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferenceAccess().getAlternatives()); }
(rule__Reference__Alternatives)
{ after(grammarAccess.getReferenceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypedElementReference
entryRuleTypedElementReference 
:
{ before(grammarAccess.getTypedElementReferenceRule()); }
	 ruleTypedElementReference
{ after(grammarAccess.getTypedElementReferenceRule()); } 
	 EOF 
;

// Rule TypedElementReference
ruleTypedElementReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypedElementReferenceAccess().getGroup()); }
(rule__TypedElementReference__Group__0)
{ after(grammarAccess.getTypedElementReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableReference
entryRuleVariableReference 
:
{ before(grammarAccess.getVariableReferenceRule()); }
	 ruleVariableReference
{ after(grammarAccess.getVariableReferenceRule()); } 
	 EOF 
;

// Rule VariableReference
ruleVariableReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableReferenceAccess().getGroup()); }
(rule__VariableReference__Group__0)
{ after(grammarAccess.getVariableReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodCall
entryRuleMethodCall 
:
{ before(grammarAccess.getMethodCallRule()); }
	 ruleMethodCall
{ after(grammarAccess.getMethodCallRule()); } 
	 EOF 
;

// Rule MethodCall
ruleMethodCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodCallAccess().getGroup()); }
(rule__MethodCall__Group__0)
{ after(grammarAccess.getMethodCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReferenceTail
entryRuleReferenceTail 
:
{ before(grammarAccess.getReferenceTailRule()); }
	 ruleReferenceTail
{ after(grammarAccess.getReferenceTailRule()); } 
	 EOF 
;

// Rule ReferenceTail
ruleReferenceTail
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferenceTailAccess().getGroup()); }
(rule__ReferenceTail__Group__0)
{ after(grammarAccess.getReferenceTailAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResourceReference
entryRuleResourceReference 
:
{ before(grammarAccess.getResourceReferenceRule()); }
	 ruleResourceReference
{ after(grammarAccess.getResourceReferenceRule()); } 
	 EOF 
;

// Rule ResourceReference
ruleResourceReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getResourceReferenceAccess().getReferencedElementAssignment()); }
(rule__ResourceReference__ReferencedElementAssignment)
{ after(grammarAccess.getResourceReferenceAccess().getReferencedElementAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleDecimal
entryRuleDecimal 
:
{ before(grammarAccess.getDecimalRule()); }
	 ruleDecimal
{ after(grammarAccess.getDecimalRule()); } 
	 EOF 
;

// Rule Decimal
ruleDecimal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDecimalAccess().getGroup()); }
(rule__Decimal__Group__0)
{ after(grammarAccess.getDecimalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteralValue
entryRuleLiteralValue 
:
{ before(grammarAccess.getLiteralValueRule()); }
	 ruleLiteralValue
{ after(grammarAccess.getLiteralValueRule()); } 
	 EOF 
;

// Rule LiteralValue
ruleLiteralValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralValueAccess().getAlternatives()); }
(rule__LiteralValue__Alternatives)
{ after(grammarAccess.getLiteralValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringValue
entryRuleStringValue 
:
{ before(grammarAccess.getStringValueRule()); }
	 ruleStringValue
{ after(grammarAccess.getStringValueRule()); } 
	 EOF 
;

// Rule StringValue
ruleStringValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringValueAccess().getLiteralAssignment()); }
(rule__StringValue__LiteralAssignment)
{ after(grammarAccess.getStringValueAccess().getLiteralAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFloatValue
entryRuleFloatValue 
:
{ before(grammarAccess.getFloatValueRule()); }
	 ruleFloatValue
{ after(grammarAccess.getFloatValueRule()); } 
	 EOF 
;

// Rule FloatValue
ruleFloatValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFloatValueAccess().getLiteralAssignment()); }
(rule__FloatValue__LiteralAssignment)
{ after(grammarAccess.getFloatValueAccess().getLiteralAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBoolValue
entryRuleBoolValue 
:
{ before(grammarAccess.getBoolValueRule()); }
	 ruleBoolValue
{ after(grammarAccess.getBoolValueRule()); } 
	 EOF 
;

// Rule BoolValue
ruleBoolValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBoolValueAccess().getGroup()); }
(rule__BoolValue__Group__0)
{ after(grammarAccess.getBoolValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntValue
entryRuleIntValue 
:
{ before(grammarAccess.getIntValueRule()); }
	 ruleIntValue
{ after(grammarAccess.getIntValueRule()); } 
	 EOF 
;

// Rule IntValue
ruleIntValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntValueAccess().getLiteralAssignment()); }
(rule__IntValue__LiteralAssignment)
{ after(grammarAccess.getIntValueAccess().getLiteralAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNullValue
entryRuleNullValue 
:
{ before(grammarAccess.getNullValueRule()); }
	 ruleNullValue
{ after(grammarAccess.getNullValueRule()); } 
	 EOF 
;

// Rule NullValue
ruleNullValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNullValueAccess().getLiteralAssignment()); }
(rule__NullValue__LiteralAssignment)
{ after(grammarAccess.getNullValueAccess().getLiteralAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResourceName
entryRuleResourceName 
:
{ before(grammarAccess.getResourceNameRule()); }
	 ruleResourceName
{ after(grammarAccess.getResourceNameRule()); } 
	 EOF 
;

// Rule ResourceName
ruleResourceName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getResourceNameAccess().getGroup()); }
(rule__ResourceName__Group__0)
{ after(grammarAccess.getResourceNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Package__BodyAlternatives_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getBodyEntityParserRuleCall_5_0_0()); }
	ruleEntity
{ after(grammarAccess.getPackageAccess().getBodyEntityParserRuleCall_5_0_0()); }
)

    |(
{ before(grammarAccess.getPackageAccess().getBodyDTOParserRuleCall_5_0_1()); }
	ruleDTO
{ after(grammarAccess.getPackageAccess().getBodyDTOParserRuleCall_5_0_1()); }
)

    |(
{ before(grammarAccess.getPackageAccess().getBodyViewParserRuleCall_5_0_2()); }
	ruleView
{ after(grammarAccess.getPackageAccess().getBodyViewParserRuleCall_5_0_2()); }
)

    |(
{ before(grammarAccess.getPackageAccess().getBodyControllerParserRuleCall_5_0_3()); }
	ruleController
{ after(grammarAccess.getPackageAccess().getBodyControllerParserRuleCall_5_0_3()); }
)

    |(
{ before(grammarAccess.getPackageAccess().getBodyPrimitiveParserRuleCall_5_0_4()); }
	rulePrimitive
{ after(grammarAccess.getPackageAccess().getBodyPrimitiveParserRuleCall_5_0_4()); }
)

    |(
{ before(grammarAccess.getPackageAccess().getBodyConstraintParserRuleCall_5_0_5()); }
	ruleConstraint
{ after(grammarAccess.getPackageAccess().getBodyConstraintParserRuleCall_5_0_5()); }
)

    |(
{ before(grammarAccess.getPackageAccess().getBodyResourceBundleParserRuleCall_5_0_6()); }
	ruleResourceBundle
{ after(grammarAccess.getPackageAccess().getBodyResourceBundleParserRuleCall_5_0_6()); }
)

    |(
{ before(grammarAccess.getPackageAccess().getBodyActorParserRuleCall_5_0_7()); }
	ruleActor
{ after(grammarAccess.getPackageAccess().getBodyActorParserRuleCall_5_0_7()); }
)

    |(
{ before(grammarAccess.getPackageAccess().getBodyServiceParserRuleCall_5_0_8()); }
	ruleService
{ after(grammarAccess.getPackageAccess().getBodyServiceParserRuleCall_5_0_8()); }
)

    |(
{ before(grammarAccess.getPackageAccess().getBodyEnumParserRuleCall_5_0_9()); }
	ruleEnum
{ after(grammarAccess.getPackageAccess().getBodyEnumParserRuleCall_5_0_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getGroup_4_0()); }
(rule__Entity__Group_4_0__0)
{ after(grammarAccess.getEntityAccess().getGroup_4_0()); }
)

    |(
{ before(grammarAccess.getEntityAccess().getSemicolonKeyword_4_1()); }

	';' 

{ after(grammarAccess.getEntityAccess().getSemicolonKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DTO__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTOAccess().getGroup_3_0()); }
(rule__DTO__Group_3_0__0)
{ after(grammarAccess.getDTOAccess().getGroup_3_0()); }
)

    |(
{ before(grammarAccess.getDTOAccess().getSemicolonKeyword_3_1()); }

	';' 

{ after(grammarAccess.getDTOAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getParameterizedTypeParserRuleCall_0()); }
(	ruleParameterizedType)
{ after(grammarAccess.getTypeAccess().getParameterizedTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getSimpleTypeParserRuleCall_1()); }
	ruleSimpleType
{ after(grammarAccess.getTypeAccess().getSimpleTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getMethodParserRuleCall_0()); }
(	ruleMethod)
{ after(grammarAccess.getFeatureAccess().getMethodParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFeatureAccess().getServiceAttributeParserRuleCall_1()); }
	ruleServiceAttribute
{ after(grammarAccess.getFeatureAccess().getServiceAttributeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getRegularMethodParserRuleCall_0()); }
	ruleRegularMethod
{ after(grammarAccess.getMethodAccess().getRegularMethodParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMethodAccess().getNativeMethodParserRuleCall_1()); }
	ruleNativeMethod
{ after(grammarAccess.getMethodAccess().getNativeMethodParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegularMethod__Alternatives_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularMethodAccess().getGroup_6_0()); }
(rule__RegularMethod__Group_6_0__0)
{ after(grammarAccess.getRegularMethodAccess().getGroup_6_0()); }
)

    |(
{ before(grammarAccess.getRegularMethodAccess().getSemicolonKeyword_6_1()); }

	';' 

{ after(grammarAccess.getRegularMethodAccess().getSemicolonKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControllerAccess().getGroup_2_0()); }
(rule__Controller__Group_2_0__0)
{ after(grammarAccess.getControllerAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getControllerAccess().getSemicolonKeyword_2_1()); }

	';' 

{ after(grammarAccess.getControllerAccess().getSemicolonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__BodyAlternatives_2_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControllerAccess().getBodyServiceAttributeParserRuleCall_2_0_1_0_0()); }
	ruleServiceAttribute
{ after(grammarAccess.getControllerAccess().getBodyServiceAttributeParserRuleCall_2_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getControllerAccess().getBodyActionParserRuleCall_2_0_1_0_1()); }
	ruleAction
{ after(grammarAccess.getControllerAccess().getBodyActionParserRuleCall_2_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getGroup_0()); }
(rule__Action__Group_0__0)
{ after(grammarAccess.getActionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getActionAccess().getGroup_1()); }
(rule__Action__Group_1__0)
{ after(grammarAccess.getActionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getGroup_3_0()); }
(rule__Actor__Group_3_0__0)
{ after(grammarAccess.getActorAccess().getGroup_3_0()); }
)

    |(
{ before(grammarAccess.getActorAccess().getSemicolonKeyword_3_1()); }

	';' 

{ after(grammarAccess.getActorAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__View__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getPageParserRuleCall_0()); }
	rulePage
{ after(grammarAccess.getViewAccess().getPageParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getViewAccess().getWidgetParserRuleCall_1()); }
	ruleWidget
{ after(grammarAccess.getViewAccess().getWidgetParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getGroup_5_0()); }
(rule__Page__Group_5_0__0)
{ after(grammarAccess.getPageAccess().getGroup_5_0()); }
)

    |(
{ before(grammarAccess.getPageAccess().getSemicolonKeyword_5_1()); }

	';' 

{ after(grammarAccess.getPageAccess().getSemicolonKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Widget__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWidgetAccess().getGroup_4_0()); }
(rule__Widget__Group_4_0__0)
{ after(grammarAccess.getWidgetAccess().getGroup_4_0()); }
)

    |(
{ before(grammarAccess.getWidgetAccess().getSemicolonKeyword_4_1()); }

	';' 

{ after(grammarAccess.getWidgetAccess().getSemicolonKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ViewStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewStatementAccess().getIfViewParserRuleCall_0()); }
	ruleIfView
{ after(grammarAccess.getViewStatementAccess().getIfViewParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getViewStatementAccess().getForViewParserRuleCall_1()); }
	ruleForView
{ after(grammarAccess.getViewStatementAccess().getForViewParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getViewStatementAccess().getViewInstanceParserRuleCall_2()); }
	ruleViewInstance
{ after(grammarAccess.getViewStatementAccess().getViewInstanceParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getViewStatementAccess().getNamedViewBlockParserRuleCall_3()); }
	ruleNamedViewBlock
{ after(grammarAccess.getViewStatementAccess().getNamedViewBlockParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfView__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfViewAccess().getGroup_5_0()); }
(rule__IfView__Group_5_0__0)
{ after(grammarAccess.getIfViewAccess().getGroup_5_0()); }
)

    |(
{ before(grammarAccess.getIfViewAccess().getBodyAssignment_5_1()); }
(rule__IfView__BodyAssignment_5_1)
{ after(grammarAccess.getIfViewAccess().getBodyAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForView__Alternatives_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForViewAccess().getGroup_7_0()); }
(rule__ForView__Group_7_0__0)
{ after(grammarAccess.getForViewAccess().getGroup_7_0()); }
)

    |(
{ before(grammarAccess.getForViewAccess().getBodyAssignment_7_1()); }
(rule__ForView__BodyAssignment_7_1)
{ after(grammarAccess.getForViewAccess().getBodyAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ViewInstance__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewInstanceAccess().getGroup_2_0()); }
(rule__ViewInstance__Group_2_0__0)
{ after(grammarAccess.getViewInstanceAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getViewInstanceAccess().getSemicolonKeyword_2_1()); }

	';' 

{ after(grammarAccess.getViewInstanceAccess().getSemicolonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedViewBlock__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedViewBlockAccess().getGroup_2_0()); }
(rule__NamedViewBlock__Group_2_0__0)
{ after(grammarAccess.getNamedViewBlockAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getNamedViewBlockAccess().getBodyAssignment_2_1()); }
(rule__NamedViewBlock__BodyAssignment_2_1)
{ after(grammarAccess.getNamedViewBlockAccess().getBodyAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodStatementAccess().getVariableParserRuleCall_0()); }
	ruleVariable
{ after(grammarAccess.getMethodStatementAccess().getVariableParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMethodStatementAccess().getIfParserRuleCall_1()); }
	ruleIf
{ after(grammarAccess.getMethodStatementAccess().getIfParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getMethodStatementAccess().getWhileParserRuleCall_2()); }
	ruleWhile
{ after(grammarAccess.getMethodStatementAccess().getWhileParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getMethodStatementAccess().getShowParserRuleCall_3()); }
	ruleShow
{ after(grammarAccess.getMethodStatementAccess().getShowParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getMethodStatementAccess().getForParserRuleCall_4()); }
	ruleFor
{ after(grammarAccess.getMethodStatementAccess().getForParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getMethodStatementAccess().getActionCallStatementParserRuleCall_5()); }
	ruleActionCallStatement
{ after(grammarAccess.getMethodStatementAccess().getActionCallStatementParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getMethodStatementAccess().getReferenceStatementParserRuleCall_6()); }
	ruleReferenceStatement
{ after(grammarAccess.getMethodStatementAccess().getReferenceStatementParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceStatement__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceStatementAccess().getSymbolAssignment_1_1_0()); }
(rule__ReferenceStatement__SymbolAssignment_1_1_0)
{ after(grammarAccess.getReferenceStatementAccess().getSymbolAssignment_1_1_0()); }
)

    |(
{ before(grammarAccess.getReferenceStatementAccess().getSymbolAssignment_1_1_1()); }
(rule__ReferenceStatement__SymbolAssignment_1_1_1)
{ after(grammarAccess.getReferenceStatementAccess().getSymbolAssignment_1_1_1()); }
)

    |(
{ before(grammarAccess.getReferenceStatementAccess().getSymbolAssignment_1_1_2()); }
(rule__ReferenceStatement__SymbolAssignment_1_1_2)
{ after(grammarAccess.getReferenceStatementAccess().getSymbolAssignment_1_1_2()); }
)

    |(
{ before(grammarAccess.getReferenceStatementAccess().getSymbolAssignment_1_1_3()); }
(rule__ReferenceStatement__SymbolAssignment_1_1_3)
{ after(grammarAccess.getReferenceStatementAccess().getSymbolAssignment_1_1_3()); }
)

    |(
{ before(grammarAccess.getReferenceStatementAccess().getSymbolAssignment_1_1_4()); }
(rule__ReferenceStatement__SymbolAssignment_1_1_4)
{ after(grammarAccess.getReferenceStatementAccess().getSymbolAssignment_1_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getGroup_5_0()); }
(rule__If__Group_5_0__0)
{ after(grammarAccess.getIfAccess().getGroup_5_0()); }
)

    |(
{ before(grammarAccess.getIfAccess().getBodyAssignment_5_1()); }
(rule__If__BodyAssignment_5_1)
{ after(grammarAccess.getIfAccess().getBodyAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If__Alternatives_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getGroup_6_1_0()); }
(rule__If__Group_6_1_0__0)
{ after(grammarAccess.getIfAccess().getGroup_6_1_0()); }
)

    |(
{ before(grammarAccess.getIfAccess().getElseBodyAssignment_6_1_1()); }
(rule__If__ElseBodyAssignment_6_1_1)
{ after(grammarAccess.getIfAccess().getElseBodyAssignment_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__While__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getGroup_5_0()); }
(rule__While__Group_5_0__0)
{ after(grammarAccess.getWhileAccess().getGroup_5_0()); }
)

    |(
{ before(grammarAccess.getWhileAccess().getBodyAssignment_5_1()); }
(rule__While__BodyAssignment_5_1)
{ after(grammarAccess.getWhileAccess().getBodyAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For__Alternatives_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getGroup_7_0()); }
(rule__For__Group_7_0__0)
{ after(grammarAccess.getForAccess().getGroup_7_0()); }
)

    |(
{ before(grammarAccess.getForAccess().getBodyAssignment_7_1()); }
(rule__For__BodyAssignment_7_1)
{ after(grammarAccess.getForAccess().getBodyAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegationAccess().getComparisonParserRuleCall_0()); }
	ruleComparison
{ after(grammarAccess.getNegationAccess().getComparisonParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNegationAccess().getGroup_1()); }
(rule__Negation__Group_1__0)
{ after(grammarAccess.getNegationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getSymbolAssignment_1_1_0()); }
(rule__Comparison__SymbolAssignment_1_1_0)
{ after(grammarAccess.getComparisonAccess().getSymbolAssignment_1_1_0()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getSymbolAssignment_1_1_1()); }
(rule__Comparison__SymbolAssignment_1_1_1)
{ after(grammarAccess.getComparisonAccess().getSymbolAssignment_1_1_1()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getSymbolAssignment_1_1_2()); }
(rule__Comparison__SymbolAssignment_1_1_2)
{ after(grammarAccess.getComparisonAccess().getSymbolAssignment_1_1_2()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getSymbolAssignment_1_1_3()); }
(rule__Comparison__SymbolAssignment_1_1_3)
{ after(grammarAccess.getComparisonAccess().getSymbolAssignment_1_1_3()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getSymbolAssignment_1_1_4()); }
(rule__Comparison__SymbolAssignment_1_1_4)
{ after(grammarAccess.getComparisonAccess().getSymbolAssignment_1_1_4()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getSymbolAssignment_1_1_5()); }
(rule__Comparison__SymbolAssignment_1_1_5)
{ after(grammarAccess.getComparisonAccess().getSymbolAssignment_1_1_5()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getSymbolAssignment_1_1_6()); }
(rule__Comparison__SymbolAssignment_1_1_6)
{ after(grammarAccess.getComparisonAccess().getSymbolAssignment_1_1_6()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getSymbolAssignment_1_1_7()); }
(rule__Comparison__SymbolAssignment_1_1_7)
{ after(grammarAccess.getComparisonAccess().getSymbolAssignment_1_1_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticExpressionAccess().getSymbolAssignment_1_1_0()); }
(rule__ArithmeticExpression__SymbolAssignment_1_1_0)
{ after(grammarAccess.getArithmeticExpressionAccess().getSymbolAssignment_1_1_0()); }
)

    |(
{ before(grammarAccess.getArithmeticExpressionAccess().getSymbolAssignment_1_1_1()); }
(rule__ArithmeticExpression__SymbolAssignment_1_1_1)
{ after(grammarAccess.getArithmeticExpressionAccess().getSymbolAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getSymbolAssignment_1_1_0()); }
(rule__Term__SymbolAssignment_1_1_0)
{ after(grammarAccess.getTermAccess().getSymbolAssignment_1_1_0()); }
)

    |(
{ before(grammarAccess.getTermAccess().getSymbolAssignment_1_1_1()); }
(rule__Term__SymbolAssignment_1_1_1)
{ after(grammarAccess.getTermAccess().getSymbolAssignment_1_1_1()); }
)

    |(
{ before(grammarAccess.getTermAccess().getSymbolAssignment_1_1_2()); }
(rule__Term__SymbolAssignment_1_1_2)
{ after(grammarAccess.getTermAccess().getSymbolAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Negative__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegativeAccess().getFactorParserRuleCall_0()); }
	ruleFactor
{ after(grammarAccess.getNegativeAccess().getFactorParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNegativeAccess().getGroup_1()); }
(rule__Negative__Group_1__0)
{ after(grammarAccess.getNegativeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getGroup_0()); }
(rule__Factor__Group_0__0)
{ after(grammarAccess.getFactorAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getFactorAccess().getLiteralValueParserRuleCall_1()); }
	ruleLiteralValue
{ after(grammarAccess.getFactorAccess().getLiteralValueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getFactorAccess().getReferenceParserRuleCall_2()); }
	ruleReference
{ after(grammarAccess.getFactorAccess().getReferenceParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getFactorAccess().getStructInstanceParserRuleCall_3()); }
	ruleStructInstance
{ after(grammarAccess.getFactorAccess().getStructInstanceParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getResourceReferenceParserRuleCall_0()); }
	ruleResourceReference
{ after(grammarAccess.getReferenceAccess().getResourceReferenceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getReferenceAccess().getTypedElementReferenceParserRuleCall_1()); }
	ruleTypedElementReference
{ after(grammarAccess.getReferenceAccess().getTypedElementReferenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedElementReference__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedElementReferenceAccess().getMethodCallParserRuleCall_0_0()); }
	ruleMethodCall
{ after(grammarAccess.getTypedElementReferenceAccess().getMethodCallParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getTypedElementReferenceAccess().getVariableReferenceParserRuleCall_0_1()); }
	ruleVariableReference
{ after(grammarAccess.getTypedElementReferenceAccess().getVariableReferenceParserRuleCall_0_1()); }
)

    |(
{ before(grammarAccess.getTypedElementReferenceAccess().getSimpleTypeParserRuleCall_0_2()); }
	ruleSimpleType
{ after(grammarAccess.getTypedElementReferenceAccess().getSimpleTypeParserRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getIntValueParserRuleCall_0()); }
	ruleIntValue
{ after(grammarAccess.getLiteralValueAccess().getIntValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralValueAccess().getFloatValueParserRuleCall_1()); }
	ruleFloatValue
{ after(grammarAccess.getLiteralValueAccess().getFloatValueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLiteralValueAccess().getBoolValueParserRuleCall_2()); }
	ruleBoolValue
{ after(grammarAccess.getLiteralValueAccess().getBoolValueParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLiteralValueAccess().getStringValueParserRuleCall_3()); }
	ruleStringValue
{ after(grammarAccess.getLiteralValueAccess().getStringValueParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getLiteralValueAccess().getNullValueParserRuleCall_4()); }
	ruleNullValue
{ after(grammarAccess.getLiteralValueAccess().getNullValueParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BoolValue__LiteralAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolValueAccess().getLiteralTrueKeyword_1_0_0()); }

	'true' 

{ after(grammarAccess.getBoolValueAccess().getLiteralTrueKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getBoolValueAccess().getLiteralFalseKeyword_1_0_1()); }

	'false' 

{ after(grammarAccess.getBoolValueAccess().getLiteralFalseKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getLOWER_CASE_IDTerminalRuleCall_0_0()); }
	RULE_LOWER_CASE_ID
{ after(grammarAccess.getQualifiedNameAccess().getLOWER_CASE_IDTerminalRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getQualifiedNameAccess().getUPPER_CASE_IDTerminalRuleCall_0_1()); }
	RULE_UPPER_CASE_ID
{ after(grammarAccess.getQualifiedNameAccess().getUPPER_CASE_IDTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getLOWER_CASE_IDTerminalRuleCall_1_1_0()); }
	RULE_LOWER_CASE_ID
{ after(grammarAccess.getQualifiedNameAccess().getLOWER_CASE_IDTerminalRuleCall_1_1_0()); }
)

    |(
{ before(grammarAccess.getQualifiedNameAccess().getUPPER_CASE_IDTerminalRuleCall_1_1_1()); }
	RULE_UPPER_CASE_ID
{ after(grammarAccess.getQualifiedNameAccess().getUPPER_CASE_IDTerminalRuleCall_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Package__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__0__Impl
	rule__Package__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getPackageAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__1__Impl
	rule__Package__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getNameAssignment_1()); }
(rule__Package__NameAssignment_1)
{ after(grammarAccess.getPackageAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__2__Impl
	rule__Package__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getPackageAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__3__Impl
	rule__Package__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getImportsAssignment_3()); }
(rule__Package__ImportsAssignment_3)*
{ after(grammarAccess.getPackageAccess().getImportsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__4__Impl
	rule__Package__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getGroup_4()); }
(rule__Package__Group_4__0)?
{ after(grammarAccess.getPackageAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getBodyAssignment_5()); }
(rule__Package__BodyAssignment_5)*
{ after(grammarAccess.getPackageAccess().getBodyAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Package__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group_4__0__Impl
	rule__Package__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getResourcesKeyword_4_0()); }

	'resources' 

{ after(grammarAccess.getPackageAccess().getResourcesKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group_4__1__Impl
	rule__Package__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getHasBodyAssignment_4_1()); }
(rule__Package__HasBodyAssignment_4_1)
{ after(grammarAccess.getPackageAccess().getHasBodyAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group_4__2__Impl
	rule__Package__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getBodyAssignment_4_2()); }
(rule__Package__BodyAssignment_4_2)*
{ after(grammarAccess.getPackageAccess().getBodyAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_4_3()); }

	'}' 

{ after(grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedPackageAssignment_1()); }
(rule__Import__ImportedPackageAssignment_1)
{ after(grammarAccess.getImportAccess().getImportedPackageAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__2__Impl
	rule__Import__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getFullStopAsteriskKeyword_2()); }

	'.*' 

{ after(grammarAccess.getImportAccess().getFullStopAsteriskKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getImportAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Resource__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Resource__Group__0__Impl
	rule__Resource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceAccess().getNameAssignment_0()); }
(rule__Resource__NameAssignment_0)
{ after(grammarAccess.getResourceAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Resource__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Resource__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getResourceAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ResourceBundle__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceBundle__Group__0__Impl
	rule__ResourceBundle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceBundle__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceBundleAccess().getResourceBundleKeyword_0()); }

	'resourceBundle' 

{ after(grammarAccess.getResourceBundleAccess().getResourceBundleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceBundle__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceBundle__Group__1__Impl
	rule__ResourceBundle__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceBundle__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceBundleAccess().getNameAssignment_1()); }
(rule__ResourceBundle__NameAssignment_1)
{ after(grammarAccess.getResourceBundleAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceBundle__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceBundle__Group__2__Impl
	rule__ResourceBundle__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceBundle__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceBundleAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getResourceBundleAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceBundle__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceBundle__Group__3__Impl
	rule__ResourceBundle__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceBundle__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceBundleAccess().getBodyAssignment_3()); }
(rule__ResourceBundle__BodyAssignment_3)*
{ after(grammarAccess.getResourceBundleAccess().getBodyAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceBundle__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceBundle__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceBundle__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceBundleAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getResourceBundleAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ResourceAssignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceAssignment__Group__0__Impl
	rule__ResourceAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceAssignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceAssignmentAccess().getLeftAssignment_0()); }
(rule__ResourceAssignment__LeftAssignment_0)
{ after(grammarAccess.getResourceAssignmentAccess().getLeftAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceAssignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceAssignment__Group__1__Impl
	rule__ResourceAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceAssignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceAssignmentAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getResourceAssignmentAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceAssignment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceAssignment__Group__2__Impl
	rule__ResourceAssignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceAssignment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceAssignmentAccess().getRightAssignment_2()); }
(rule__ResourceAssignment__RightAssignment_2)
{ after(grammarAccess.getResourceAssignmentAccess().getRightAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceAssignment__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceAssignment__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceAssignment__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceAssignmentAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getResourceAssignmentAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Entity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getAbstractAssignment_0()); }
(rule__Entity__AbstractAssignment_0)?
{ after(grammarAccess.getEntityAccess().getAbstractAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getEntityKeyword_1()); }

	'entity' 

{ after(grammarAccess.getEntityAccess().getEntityKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__2__Impl
	rule__Entity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNameAssignment_2()); }
(rule__Entity__NameAssignment_2)
{ after(grammarAccess.getEntityAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__3__Impl
	rule__Entity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getGroup_3()); }
(rule__Entity__Group_3__0)?
{ after(grammarAccess.getEntityAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getAlternatives_4()); }
(rule__Entity__Alternatives_4)
{ after(grammarAccess.getEntityAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Entity__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_3__0__Impl
	rule__Entity__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getExtendsKeyword_3_0()); }

	'extends' 

{ after(grammarAccess.getEntityAccess().getExtendsKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_3__1__Impl
	rule__Entity__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getSuperTypesAssignment_3_1()); }
(rule__Entity__SuperTypesAssignment_3_1)
{ after(grammarAccess.getEntityAccess().getSuperTypesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getGroup_3_2()); }
(rule__Entity__Group_3_2__0)*
{ after(grammarAccess.getEntityAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Entity__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_3_2__0__Impl
	rule__Entity__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getEntityAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getSuperTypesAssignment_3_2_1()); }
(rule__Entity__SuperTypesAssignment_3_2_1)
{ after(grammarAccess.getEntityAccess().getSuperTypesAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Entity__Group_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_4_0__0__Impl
	rule__Entity__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_4_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getHasBodyAssignment_4_0_0()); }
(rule__Entity__HasBodyAssignment_4_0_0)
{ after(grammarAccess.getEntityAccess().getHasBodyAssignment_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_4_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_4_0__1__Impl
	rule__Entity__Group_4_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_4_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getBodyAssignment_4_0_1()); }
(rule__Entity__BodyAssignment_4_0_1)*
{ after(grammarAccess.getEntityAccess().getBodyAssignment_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_4_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_4_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_4_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_4_0_2()); }

	'}' 

{ after(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_4_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Attribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getTypeAssignment_0()); }
(rule__Attribute__TypeAssignment_0)
{ after(grammarAccess.getAttributeAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
(rule__Attribute__NameAssignment_1)
{ after(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__2__Impl
	rule__Attribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getGroup_2()); }
(rule__Attribute__Group_2__0)?
{ after(grammarAccess.getAttributeAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__3__Impl
	rule__Attribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getGroup_3()); }
(rule__Attribute__Group_3__0)?
{ after(grammarAccess.getAttributeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getAttributeAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Attribute__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_2__0__Impl
	rule__Attribute__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getMustKeyword_2_0()); }

	'must' 

{ after(grammarAccess.getAttributeAccess().getMustKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_2__1__Impl
	rule__Attribute__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getBeKeyword_2_1()); }
(
	'be' 
)?
{ after(grammarAccess.getAttributeAccess().getBeKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_2__2__Impl
	rule__Attribute__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getConstraintsAssignment_2_2()); }
(rule__Attribute__ConstraintsAssignment_2_2)
{ after(grammarAccess.getAttributeAccess().getConstraintsAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getGroup_2_3()); }
(rule__Attribute__Group_2_3__0)*
{ after(grammarAccess.getAttributeAccess().getGroup_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Attribute__Group_2_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_2_3__0__Impl
	rule__Attribute__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_2_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getCommaKeyword_2_3_0()); }

	',' 

{ after(grammarAccess.getAttributeAccess().getCommaKeyword_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_2_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_2_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getConstraintsAssignment_2_3_1()); }
(rule__Attribute__ConstraintsAssignment_2_3_1)
{ after(grammarAccess.getAttributeAccess().getConstraintsAssignment_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Attribute__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_3__0__Impl
	rule__Attribute__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getOppositeKeyword_3_0()); }

	'opposite' 

{ after(grammarAccess.getAttributeAccess().getOppositeKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getOppositeAssignment_3_1()); }
(rule__Attribute__OppositeAssignment_3_1)
{ after(grammarAccess.getAttributeAccess().getOppositeAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DTO__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DTO__Group__0__Impl
	rule__DTO__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DTO__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTOAccess().getDtoKeyword_0()); }

	'dto' 

{ after(grammarAccess.getDTOAccess().getDtoKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DTO__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DTO__Group__1__Impl
	rule__DTO__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DTO__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTOAccess().getNameAssignment_1()); }
(rule__DTO__NameAssignment_1)
{ after(grammarAccess.getDTOAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DTO__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DTO__Group__2__Impl
	rule__DTO__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DTO__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTOAccess().getGroup_2()); }
(rule__DTO__Group_2__0)?
{ after(grammarAccess.getDTOAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DTO__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DTO__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DTO__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTOAccess().getAlternatives_3()); }
(rule__DTO__Alternatives_3)
{ after(grammarAccess.getDTOAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DTO__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DTO__Group_2__0__Impl
	rule__DTO__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DTO__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTOAccess().getExtendsKeyword_2_0()); }

	'extends' 

{ after(grammarAccess.getDTOAccess().getExtendsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DTO__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DTO__Group_2__1__Impl
	rule__DTO__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DTO__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTOAccess().getSuperTypesAssignment_2_1()); }
(rule__DTO__SuperTypesAssignment_2_1)
{ after(grammarAccess.getDTOAccess().getSuperTypesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DTO__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DTO__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DTO__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTOAccess().getGroup_2_2()); }
(rule__DTO__Group_2_2__0)*
{ after(grammarAccess.getDTOAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DTO__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DTO__Group_2_2__0__Impl
	rule__DTO__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DTO__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTOAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getDTOAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DTO__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DTO__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DTO__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTOAccess().getSuperTypesAssignment_2_2_1()); }
(rule__DTO__SuperTypesAssignment_2_2_1)
{ after(grammarAccess.getDTOAccess().getSuperTypesAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DTO__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DTO__Group_3_0__0__Impl
	rule__DTO__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DTO__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTOAccess().getHasBodyAssignment_3_0_0()); }
(rule__DTO__HasBodyAssignment_3_0_0)
{ after(grammarAccess.getDTOAccess().getHasBodyAssignment_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DTO__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DTO__Group_3_0__1__Impl
	rule__DTO__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DTO__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTOAccess().getBodyAssignment_3_0_1()); }
(rule__DTO__BodyAssignment_3_0_1)*
{ after(grammarAccess.getDTOAccess().getBodyAssignment_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DTO__Group_3_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DTO__Group_3_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DTO__Group_3_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTOAccess().getRightCurlyBracketKeyword_3_0_2()); }

	'}' 

{ after(grammarAccess.getDTOAccess().getRightCurlyBracketKeyword_3_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DTOAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DTOAttribute__Group__0__Impl
	rule__DTOAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DTOAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTOAttributeAccess().getTypeAssignment_0()); }
(rule__DTOAttribute__TypeAssignment_0)
{ after(grammarAccess.getDTOAttributeAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DTOAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DTOAttribute__Group__1__Impl
	rule__DTOAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DTOAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTOAttributeAccess().getNameAssignment_1()); }
(rule__DTOAttribute__NameAssignment_1)
{ after(grammarAccess.getDTOAttributeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DTOAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DTOAttribute__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DTOAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTOAttributeAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getDTOAttributeAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Enum__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__0__Impl
	rule__Enum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getEnumKeyword_0()); }

	'enum' 

{ after(grammarAccess.getEnumAccess().getEnumKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__1__Impl
	rule__Enum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getNameAssignment_1()); }
(rule__Enum__NameAssignment_1)
{ after(grammarAccess.getEnumAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__2__Impl
	rule__Enum__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getEnumAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__3__Impl
	rule__Enum__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getBodyAssignment_3()); }
(rule__Enum__BodyAssignment_3)
{ after(grammarAccess.getEnumAccess().getBodyAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__4__Impl
	rule__Enum__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getGroup_4()); }
(rule__Enum__Group_4__0)*
{ after(grammarAccess.getEnumAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getEnumAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Enum__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group_4__0__Impl
	rule__Enum__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getEnumAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getBodyAssignment_4_1()); }
(rule__Enum__BodyAssignment_4_1)
{ after(grammarAccess.getEnumAccess().getBodyAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeAssignment_0()); }
(rule__Parameter__TypeAssignment_0)
{ after(grammarAccess.getParameterAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameAssignment_1()); }
(rule__Parameter__NameAssignment_1)
{ after(grammarAccess.getParameterAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterizedType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterizedType__Group__0__Impl
	rule__ParameterizedType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeAccess().getReferencedElementAssignment_0()); }
(rule__ParameterizedType__ReferencedElementAssignment_0)
{ after(grammarAccess.getParameterizedTypeAccess().getReferencedElementAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterizedType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterizedType__Group__1__Impl
	rule__ParameterizedType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeAccess().getLessThanSignKeyword_1()); }
(
	'<' 
)
{ after(grammarAccess.getParameterizedTypeAccess().getLessThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterizedType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterizedType__Group__2__Impl
	rule__ParameterizedType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeAccess().getTypeParametersAssignment_2()); }
(rule__ParameterizedType__TypeParametersAssignment_2)
{ after(grammarAccess.getParameterizedTypeAccess().getTypeParametersAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterizedType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterizedType__Group__3__Impl
	rule__ParameterizedType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeAccess().getGroup_3()); }
(rule__ParameterizedType__Group_3__0)*
{ after(grammarAccess.getParameterizedTypeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterizedType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterizedType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeAccess().getGreaterThanSignKeyword_4()); }

	'>' 

{ after(grammarAccess.getParameterizedTypeAccess().getGreaterThanSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ParameterizedType__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterizedType__Group_3__0__Impl
	rule__ParameterizedType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedType__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getParameterizedTypeAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterizedType__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterizedType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedType__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeAccess().getTypeParametersAssignment_3_1()); }
(rule__ParameterizedType__TypeParametersAssignment_3_1)
{ after(grammarAccess.getParameterizedTypeAccess().getTypeParametersAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstraintInstance__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintInstance__Group__0__Impl
	rule__ConstraintInstance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintInstance__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintInstanceAccess().getTypeAssignment_0()); }
(rule__ConstraintInstance__TypeAssignment_0)
{ after(grammarAccess.getConstraintInstanceAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintInstance__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintInstance__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintInstance__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintInstanceAccess().getGroup_1()); }
(rule__ConstraintInstance__Group_1__0)?
{ after(grammarAccess.getConstraintInstanceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstraintInstance__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintInstance__Group_1__0__Impl
	rule__ConstraintInstance__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintInstance__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintInstanceAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getConstraintInstanceAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintInstance__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintInstance__Group_1__1__Impl
	rule__ConstraintInstance__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintInstance__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintInstanceAccess().getParametersAssignment_1_1()); }
(rule__ConstraintInstance__ParametersAssignment_1_1)
{ after(grammarAccess.getConstraintInstanceAccess().getParametersAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintInstance__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintInstance__Group_1__2__Impl
	rule__ConstraintInstance__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintInstance__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintInstanceAccess().getGroup_1_2()); }
(rule__ConstraintInstance__Group_1_2__0)*
{ after(grammarAccess.getConstraintInstanceAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintInstance__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintInstance__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintInstance__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintInstanceAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getConstraintInstanceAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ConstraintInstance__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintInstance__Group_1_2__0__Impl
	rule__ConstraintInstance__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintInstance__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintInstanceAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getConstraintInstanceAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintInstance__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintInstance__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintInstance__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintInstanceAccess().getParametersAssignment_1_2_1()); }
(rule__ConstraintInstance__ParametersAssignment_1_2_1)
{ after(grammarAccess.getConstraintInstanceAccess().getParametersAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Primitive__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primitive__Group__0__Impl
	rule__Primitive__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveAccess().getAbstractAssignment_0()); }
(rule__Primitive__AbstractAssignment_0)?
{ after(grammarAccess.getPrimitiveAccess().getAbstractAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primitive__Group__1__Impl
	rule__Primitive__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveAccess().getPrimitiveKeyword_1()); }

	'primitive' 

{ after(grammarAccess.getPrimitiveAccess().getPrimitiveKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primitive__Group__2__Impl
	rule__Primitive__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveAccess().getNameAssignment_2()); }
(rule__Primitive__NameAssignment_2)
{ after(grammarAccess.getPrimitiveAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primitive__Group__3__Impl
	rule__Primitive__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveAccess().getGroup_3()); }
(rule__Primitive__Group_3__0)?
{ after(grammarAccess.getPrimitiveAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primitive__Group__4__Impl
	rule__Primitive__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveAccess().getGroup_4()); }
(rule__Primitive__Group_4__0)?
{ after(grammarAccess.getPrimitiveAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primitive__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getPrimitiveAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Primitive__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primitive__Group_3__0__Impl
	rule__Primitive__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveAccess().getLessThanSignKeyword_3_0()); }

	'<' 

{ after(grammarAccess.getPrimitiveAccess().getLessThanSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primitive__Group_3__1__Impl
	rule__Primitive__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveAccess().getGroup_3_1()); }
(rule__Primitive__Group_3_1__0)?
{ after(grammarAccess.getPrimitiveAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primitive__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveAccess().getGreaterThanSignKeyword_3_2()); }

	'>' 

{ after(grammarAccess.getPrimitiveAccess().getGreaterThanSignKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Primitive__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primitive__Group_3_1__0__Impl
	rule__Primitive__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveAccess().getGenericTypeParametersAssignment_3_1_0()); }
(rule__Primitive__GenericTypeParametersAssignment_3_1_0)
{ after(grammarAccess.getPrimitiveAccess().getGenericTypeParametersAssignment_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primitive__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveAccess().getGroup_3_1_1()); }
(rule__Primitive__Group_3_1_1__0)*
{ after(grammarAccess.getPrimitiveAccess().getGroup_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Primitive__Group_3_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primitive__Group_3_1_1__0__Impl
	rule__Primitive__Group_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_3_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveAccess().getCommaKeyword_3_1_1_0()); }

	',' 

{ after(grammarAccess.getPrimitiveAccess().getCommaKeyword_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group_3_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primitive__Group_3_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_3_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveAccess().getGenericTypeParametersAssignment_3_1_1_1()); }
(rule__Primitive__GenericTypeParametersAssignment_3_1_1_1)
{ after(grammarAccess.getPrimitiveAccess().getGenericTypeParametersAssignment_3_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Primitive__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primitive__Group_4__0__Impl
	rule__Primitive__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveAccess().getExtendsKeyword_4_0()); }

	'extends' 

{ after(grammarAccess.getPrimitiveAccess().getExtendsKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primitive__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveAccess().getSuperTypesAssignment_4_1()); }
(rule__Primitive__SuperTypesAssignment_4_1)
{ after(grammarAccess.getPrimitiveAccess().getSuperTypesAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GenericTypeSpecification__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GenericTypeSpecification__Group__0__Impl
	rule__GenericTypeSpecification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericTypeSpecification__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericTypeSpecificationAccess().getNameAssignment_0()); }
(rule__GenericTypeSpecification__NameAssignment_0)
{ after(grammarAccess.getGenericTypeSpecificationAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GenericTypeSpecification__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GenericTypeSpecification__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericTypeSpecification__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericTypeSpecificationAccess().getGroup_1()); }
(rule__GenericTypeSpecification__Group_1__0)?
{ after(grammarAccess.getGenericTypeSpecificationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GenericTypeSpecification__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GenericTypeSpecification__Group_1__0__Impl
	rule__GenericTypeSpecification__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericTypeSpecification__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericTypeSpecificationAccess().getExtendsKeyword_1_0()); }

	'extends' 

{ after(grammarAccess.getGenericTypeSpecificationAccess().getExtendsKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GenericTypeSpecification__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GenericTypeSpecification__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericTypeSpecification__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericTypeSpecificationAccess().getSuperTypeAssignment_1_1()); }
(rule__GenericTypeSpecification__SuperTypeAssignment_1_1)
{ after(grammarAccess.getGenericTypeSpecificationAccess().getSuperTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Service__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group__0__Impl
	rule__Service__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getServiceKeyword_0()); }

	'service' 

{ after(grammarAccess.getServiceAccess().getServiceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group__1__Impl
	rule__Service__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getNameAssignment_1()); }
(rule__Service__NameAssignment_1)
{ after(grammarAccess.getServiceAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group__2__Impl
	rule__Service__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getGroup_2()); }
(rule__Service__Group_2__0)?
{ after(grammarAccess.getServiceAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group__3__Impl
	rule__Service__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getGroup_3()); }
(rule__Service__Group_3__0)?
{ after(grammarAccess.getServiceAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group__4__Impl
	rule__Service__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getHasBodyAssignment_4()); }
(rule__Service__HasBodyAssignment_4)
{ after(grammarAccess.getServiceAccess().getHasBodyAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group__5__Impl
	rule__Service__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getBodyAssignment_5()); }
(rule__Service__BodyAssignment_5)*
{ after(grammarAccess.getServiceAccess().getBodyAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getServiceAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Service__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group_2__0__Impl
	rule__Service__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getLessThanSignKeyword_2_0()); }

	'<' 

{ after(grammarAccess.getServiceAccess().getLessThanSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group_2__1__Impl
	rule__Service__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getGroup_2_1()); }
(rule__Service__Group_2_1__0)?
{ after(grammarAccess.getServiceAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getGreaterThanSignKeyword_2_2()); }

	'>' 

{ after(grammarAccess.getServiceAccess().getGreaterThanSignKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Service__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group_2_1__0__Impl
	rule__Service__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getGenericTypeParametersAssignment_2_1_0()); }
(rule__Service__GenericTypeParametersAssignment_2_1_0)
{ after(grammarAccess.getServiceAccess().getGenericTypeParametersAssignment_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getGroup_2_1_1()); }
(rule__Service__Group_2_1_1__0)*
{ after(grammarAccess.getServiceAccess().getGroup_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Service__Group_2_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group_2_1_1__0__Impl
	rule__Service__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_2_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getCommaKeyword_2_1_1_0()); }

	',' 

{ after(grammarAccess.getServiceAccess().getCommaKeyword_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group_2_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_2_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getGenericTypeParametersAssignment_2_1_1_1()); }
(rule__Service__GenericTypeParametersAssignment_2_1_1_1)
{ after(grammarAccess.getServiceAccess().getGenericTypeParametersAssignment_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Service__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group_3__0__Impl
	rule__Service__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getExtendsKeyword_3_0()); }

	'extends' 

{ after(grammarAccess.getServiceAccess().getExtendsKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getSuperTypesAssignment_3_1()); }
(rule__Service__SuperTypesAssignment_3_1)
{ after(grammarAccess.getServiceAccess().getSuperTypesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NativeMethod__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeMethod__Group__0__Impl
	rule__NativeMethod__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeMethod__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeMethodAccess().getNativeAssignment_0()); }
(rule__NativeMethod__NativeAssignment_0)
{ after(grammarAccess.getNativeMethodAccess().getNativeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeMethod__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeMethod__Group__1__Impl
	rule__NativeMethod__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeMethod__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeMethodAccess().getGroup_1()); }
(rule__NativeMethod__Group_1__0)?
{ after(grammarAccess.getNativeMethodAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeMethod__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeMethod__Group__2__Impl
	rule__NativeMethod__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeMethod__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeMethodAccess().getTypeAssignment_2()); }
(rule__NativeMethod__TypeAssignment_2)
{ after(grammarAccess.getNativeMethodAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeMethod__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeMethod__Group__3__Impl
	rule__NativeMethod__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeMethod__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeMethodAccess().getNameAssignment_3()); }
(rule__NativeMethod__NameAssignment_3)
{ after(grammarAccess.getNativeMethodAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeMethod__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeMethod__Group__4__Impl
	rule__NativeMethod__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeMethod__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeMethodAccess().getLeftParenthesisKeyword_4()); }

	'(' 

{ after(grammarAccess.getNativeMethodAccess().getLeftParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeMethod__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeMethod__Group__5__Impl
	rule__NativeMethod__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeMethod__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeMethodAccess().getGroup_5()); }
(rule__NativeMethod__Group_5__0)?
{ after(grammarAccess.getNativeMethodAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeMethod__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeMethod__Group__6__Impl
	rule__NativeMethod__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeMethod__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeMethodAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getNativeMethodAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeMethod__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeMethod__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeMethod__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeMethodAccess().getSemicolonKeyword_7()); }

	';' 

{ after(grammarAccess.getNativeMethodAccess().getSemicolonKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__NativeMethod__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeMethod__Group_1__0__Impl
	rule__NativeMethod__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeMethod__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeMethodAccess().getLessThanSignKeyword_1_0()); }

	'<' 

{ after(grammarAccess.getNativeMethodAccess().getLessThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeMethod__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeMethod__Group_1__1__Impl
	rule__NativeMethod__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeMethod__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeMethodAccess().getGroup_1_1()); }
(rule__NativeMethod__Group_1_1__0)?
{ after(grammarAccess.getNativeMethodAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeMethod__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeMethod__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeMethod__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeMethodAccess().getGreaterThanSignKeyword_1_2()); }

	'>' 

{ after(grammarAccess.getNativeMethodAccess().getGreaterThanSignKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NativeMethod__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeMethod__Group_1_1__0__Impl
	rule__NativeMethod__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeMethod__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeMethodAccess().getGenericTypeParametersAssignment_1_1_0()); }
(rule__NativeMethod__GenericTypeParametersAssignment_1_1_0)
{ after(grammarAccess.getNativeMethodAccess().getGenericTypeParametersAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeMethod__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeMethod__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeMethod__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeMethodAccess().getGroup_1_1_1()); }
(rule__NativeMethod__Group_1_1_1__0)*
{ after(grammarAccess.getNativeMethodAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NativeMethod__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeMethod__Group_1_1_1__0__Impl
	rule__NativeMethod__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeMethod__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeMethodAccess().getCommaKeyword_1_1_1_0()); }

	',' 

{ after(grammarAccess.getNativeMethodAccess().getCommaKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeMethod__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeMethod__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeMethod__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeMethodAccess().getGenericTypeParametersAssignment_1_1_1_1()); }
(rule__NativeMethod__GenericTypeParametersAssignment_1_1_1_1)
{ after(grammarAccess.getNativeMethodAccess().getGenericTypeParametersAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NativeMethod__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeMethod__Group_5__0__Impl
	rule__NativeMethod__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeMethod__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeMethodAccess().getParametersAssignment_5_0()); }
(rule__NativeMethod__ParametersAssignment_5_0)
{ after(grammarAccess.getNativeMethodAccess().getParametersAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeMethod__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeMethod__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeMethod__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeMethodAccess().getGroup_5_1()); }
(rule__NativeMethod__Group_5_1__0)*
{ after(grammarAccess.getNativeMethodAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NativeMethod__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeMethod__Group_5_1__0__Impl
	rule__NativeMethod__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeMethod__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeMethodAccess().getCommaKeyword_5_1_0()); }

	',' 

{ after(grammarAccess.getNativeMethodAccess().getCommaKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeMethod__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeMethod__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeMethod__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeMethodAccess().getParametersAssignment_5_1_1()); }
(rule__NativeMethod__ParametersAssignment_5_1_1)
{ after(grammarAccess.getNativeMethodAccess().getParametersAssignment_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RegularMethod__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegularMethod__Group__0__Impl
	rule__RegularMethod__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularMethod__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularMethodAccess().getGroup_0()); }
(rule__RegularMethod__Group_0__0)?
{ after(grammarAccess.getRegularMethodAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegularMethod__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegularMethod__Group__1__Impl
	rule__RegularMethod__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularMethod__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularMethodAccess().getTypeAssignment_1()); }
(rule__RegularMethod__TypeAssignment_1)
{ after(grammarAccess.getRegularMethodAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegularMethod__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegularMethod__Group__2__Impl
	rule__RegularMethod__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularMethod__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularMethodAccess().getNameAssignment_2()); }
(rule__RegularMethod__NameAssignment_2)
{ after(grammarAccess.getRegularMethodAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegularMethod__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegularMethod__Group__3__Impl
	rule__RegularMethod__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularMethod__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularMethodAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getRegularMethodAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegularMethod__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegularMethod__Group__4__Impl
	rule__RegularMethod__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularMethod__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularMethodAccess().getGroup_4()); }
(rule__RegularMethod__Group_4__0)?
{ after(grammarAccess.getRegularMethodAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegularMethod__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegularMethod__Group__5__Impl
	rule__RegularMethod__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularMethod__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularMethodAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getRegularMethodAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegularMethod__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegularMethod__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularMethod__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularMethodAccess().getAlternatives_6()); }
(rule__RegularMethod__Alternatives_6)
{ after(grammarAccess.getRegularMethodAccess().getAlternatives_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__RegularMethod__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegularMethod__Group_0__0__Impl
	rule__RegularMethod__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularMethod__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularMethodAccess().getLessThanSignKeyword_0_0()); }

	'<' 

{ after(grammarAccess.getRegularMethodAccess().getLessThanSignKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegularMethod__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegularMethod__Group_0__1__Impl
	rule__RegularMethod__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularMethod__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularMethodAccess().getGroup_0_1()); }
(rule__RegularMethod__Group_0_1__0)?
{ after(grammarAccess.getRegularMethodAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegularMethod__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegularMethod__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularMethod__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularMethodAccess().getGreaterThanSignKeyword_0_2()); }

	'>' 

{ after(grammarAccess.getRegularMethodAccess().getGreaterThanSignKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RegularMethod__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegularMethod__Group_0_1__0__Impl
	rule__RegularMethod__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularMethod__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularMethodAccess().getGenericTypeParametersAssignment_0_1_0()); }
(rule__RegularMethod__GenericTypeParametersAssignment_0_1_0)
{ after(grammarAccess.getRegularMethodAccess().getGenericTypeParametersAssignment_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegularMethod__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegularMethod__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularMethod__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularMethodAccess().getGroup_0_1_1()); }
(rule__RegularMethod__Group_0_1_1__0)*
{ after(grammarAccess.getRegularMethodAccess().getGroup_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RegularMethod__Group_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegularMethod__Group_0_1_1__0__Impl
	rule__RegularMethod__Group_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularMethod__Group_0_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularMethodAccess().getCommaKeyword_0_1_1_0()); }

	',' 

{ after(grammarAccess.getRegularMethodAccess().getCommaKeyword_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegularMethod__Group_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegularMethod__Group_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularMethod__Group_0_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularMethodAccess().getGenericTypeParametersAssignment_0_1_1_1()); }
(rule__RegularMethod__GenericTypeParametersAssignment_0_1_1_1)
{ after(grammarAccess.getRegularMethodAccess().getGenericTypeParametersAssignment_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RegularMethod__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegularMethod__Group_4__0__Impl
	rule__RegularMethod__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularMethod__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularMethodAccess().getParametersAssignment_4_0()); }
(rule__RegularMethod__ParametersAssignment_4_0)
{ after(grammarAccess.getRegularMethodAccess().getParametersAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegularMethod__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegularMethod__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularMethod__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularMethodAccess().getGroup_4_1()); }
(rule__RegularMethod__Group_4_1__0)*
{ after(grammarAccess.getRegularMethodAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RegularMethod__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegularMethod__Group_4_1__0__Impl
	rule__RegularMethod__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularMethod__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularMethodAccess().getCommaKeyword_4_1_0()); }

	',' 

{ after(grammarAccess.getRegularMethodAccess().getCommaKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegularMethod__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegularMethod__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularMethod__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularMethodAccess().getParametersAssignment_4_1_1()); }
(rule__RegularMethod__ParametersAssignment_4_1_1)
{ after(grammarAccess.getRegularMethodAccess().getParametersAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RegularMethod__Group_6_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegularMethod__Group_6_0__0__Impl
	rule__RegularMethod__Group_6_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularMethod__Group_6_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularMethodAccess().getHasBodyAssignment_6_0_0()); }
(rule__RegularMethod__HasBodyAssignment_6_0_0)
{ after(grammarAccess.getRegularMethodAccess().getHasBodyAssignment_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegularMethod__Group_6_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegularMethod__Group_6_0__1__Impl
	rule__RegularMethod__Group_6_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularMethod__Group_6_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularMethodAccess().getBodyAssignment_6_0_1()); }
(rule__RegularMethod__BodyAssignment_6_0_1)*
{ after(grammarAccess.getRegularMethodAccess().getBodyAssignment_6_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegularMethod__Group_6_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegularMethod__Group_6_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularMethod__Group_6_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularMethodAccess().getRightCurlyBracketKeyword_6_0_2()); }

	'}' 

{ after(grammarAccess.getRegularMethodAccess().getRightCurlyBracketKeyword_6_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ServiceAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ServiceAttribute__Group__0__Impl
	rule__ServiceAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAttributeAccess().getHasKeyword_0()); }

	'has' 

{ after(grammarAccess.getServiceAttributeAccess().getHasKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ServiceAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ServiceAttribute__Group__1__Impl
	rule__ServiceAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAttributeAccess().getTypeAssignment_1()); }
(rule__ServiceAttribute__TypeAssignment_1)
{ after(grammarAccess.getServiceAttributeAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ServiceAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ServiceAttribute__Group__2__Impl
	rule__ServiceAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAttributeAccess().getNameAssignment_2()); }
(rule__ServiceAttribute__NameAssignment_2)?
{ after(grammarAccess.getServiceAttributeAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ServiceAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ServiceAttribute__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAttributeAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getServiceAttributeAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Controller__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Controller__Group__0__Impl
	rule__Controller__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControllerAccess().getControllerKeyword_0()); }

	'controller' 

{ after(grammarAccess.getControllerAccess().getControllerKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Controller__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Controller__Group__1__Impl
	rule__Controller__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControllerAccess().getNameAssignment_1()); }
(rule__Controller__NameAssignment_1)
{ after(grammarAccess.getControllerAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Controller__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Controller__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControllerAccess().getAlternatives_2()); }
(rule__Controller__Alternatives_2)
{ after(grammarAccess.getControllerAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Controller__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Controller__Group_2_0__0__Impl
	rule__Controller__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControllerAccess().getHasBodyAssignment_2_0_0()); }
(rule__Controller__HasBodyAssignment_2_0_0)
{ after(grammarAccess.getControllerAccess().getHasBodyAssignment_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Controller__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Controller__Group_2_0__1__Impl
	rule__Controller__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControllerAccess().getBodyAssignment_2_0_1()); }
(rule__Controller__BodyAssignment_2_0_1)*
{ after(grammarAccess.getControllerAccess().getBodyAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Controller__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Controller__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControllerAccess().getRightCurlyBracketKeyword_2_0_2()); }

	'}' 

{ after(grammarAccess.getControllerAccess().getRightCurlyBracketKeyword_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Action__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_0__0__Impl
	rule__Action__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getDefaultAssignment_0_0()); }
(rule__Action__DefaultAssignment_0_0)?
{ after(grammarAccess.getActionAccess().getDefaultAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_0__1__Impl
	rule__Action__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getNameAssignment_0_1()); }
(rule__Action__NameAssignment_0_1)
{ after(grammarAccess.getActionAccess().getNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_0__2__Impl
	rule__Action__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getLeftParenthesisKeyword_0_2()); }

	'(' 

{ after(grammarAccess.getActionAccess().getLeftParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_0__3__Impl
	rule__Action__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getGroup_0_3()); }
(rule__Action__Group_0_3__0)?
{ after(grammarAccess.getActionAccess().getGroup_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_0__4__Impl
	rule__Action__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getRightParenthesisKeyword_0_4()); }

	')' 

{ after(grammarAccess.getActionAccess().getRightParenthesisKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_0__5__Impl
	rule__Action__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getLeftCurlyBracketKeyword_0_5()); }

	'{' 

{ after(grammarAccess.getActionAccess().getLeftCurlyBracketKeyword_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_0__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_0__6__Impl
	rule__Action__Group_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getBodyAssignment_0_6()); }
(rule__Action__BodyAssignment_0_6)*
{ after(grammarAccess.getActionAccess().getBodyAssignment_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_0__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_0__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getRightCurlyBracketKeyword_0_7()); }

	'}' 

{ after(grammarAccess.getActionAccess().getRightCurlyBracketKeyword_0_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Action__Group_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_0_3__0__Impl
	rule__Action__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getParametersAssignment_0_3_0()); }
(rule__Action__ParametersAssignment_0_3_0)
{ after(grammarAccess.getActionAccess().getParametersAssignment_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getGroup_0_3_1()); }
(rule__Action__Group_0_3_1__0)*
{ after(grammarAccess.getActionAccess().getGroup_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Action__Group_0_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_0_3_1__0__Impl
	rule__Action__Group_0_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getCommaKeyword_0_3_1_0()); }

	',' 

{ after(grammarAccess.getActionAccess().getCommaKeyword_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_0_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_0_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getParametersAssignment_0_3_1_1()); }
(rule__Action__ParametersAssignment_0_3_1_1)
{ after(grammarAccess.getActionAccess().getParametersAssignment_0_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Action__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_1__0__Impl
	rule__Action__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getGroup_1_0()); }
(rule__Action__Group_1_0__0)
{ after(grammarAccess.getActionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_1__1__Impl
	rule__Action__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getNameAssignment_1_1()); }
(rule__Action__NameAssignment_1_1)
{ after(grammarAccess.getActionAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_1__2__Impl
	rule__Action__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getLeftParenthesisKeyword_1_2()); }

	'(' 

{ after(grammarAccess.getActionAccess().getLeftParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_1__3__Impl
	rule__Action__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getGroup_1_3()); }
(rule__Action__Group_1_3__0)?
{ after(grammarAccess.getActionAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_1__4__Impl
	rule__Action__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getRightParenthesisKeyword_1_4()); }

	')' 

{ after(grammarAccess.getActionAccess().getRightParenthesisKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getSemicolonKeyword_1_5()); }

	';' 

{ after(grammarAccess.getActionAccess().getSemicolonKeyword_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Action__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_1_0__0__Impl
	rule__Action__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getNativeAssignment_1_0_0()); }
(rule__Action__NativeAssignment_1_0_0)
{ after(grammarAccess.getActionAccess().getNativeAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getDefaultAssignment_1_0_1()); }
(rule__Action__DefaultAssignment_1_0_1)?
{ after(grammarAccess.getActionAccess().getDefaultAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Action__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_1_3__0__Impl
	rule__Action__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getParametersAssignment_1_3_0()); }
(rule__Action__ParametersAssignment_1_3_0)
{ after(grammarAccess.getActionAccess().getParametersAssignment_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getGroup_1_3_1()); }
(rule__Action__Group_1_3_1__0)*
{ after(grammarAccess.getActionAccess().getGroup_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Action__Group_1_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_1_3_1__0__Impl
	rule__Action__Group_1_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getCommaKeyword_1_3_1_0()); }

	',' 

{ after(grammarAccess.getActionAccess().getCommaKeyword_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_1_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_1_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getParametersAssignment_1_3_1_1()); }
(rule__Action__ParametersAssignment_1_3_1_1)
{ after(grammarAccess.getActionAccess().getParametersAssignment_1_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constraint__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__0__Impl
	rule__Constraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getConstraintKeyword_0()); }

	'constraint' 

{ after(grammarAccess.getConstraintAccess().getConstraintKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__1__Impl
	rule__Constraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getNameAssignment_1()); }
(rule__Constraint__NameAssignment_1)
{ after(grammarAccess.getConstraintAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__2__Impl
	rule__Constraint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getGroup_2()); }
(rule__Constraint__Group_2__0)?
{ after(grammarAccess.getConstraintAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getConstraintAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Constraint__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group_2__0__Impl
	rule__Constraint__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getConstraintAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group_2__1__Impl
	rule__Constraint__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getParametersAssignment_2_1()); }
(rule__Constraint__ParametersAssignment_2_1)
{ after(grammarAccess.getConstraintAccess().getParametersAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group_2__2__Impl
	rule__Constraint__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getGroup_2_2()); }
(rule__Constraint__Group_2_2__0)*
{ after(grammarAccess.getConstraintAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getConstraintAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Constraint__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group_2_2__0__Impl
	rule__Constraint__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getConstraintAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getParametersAssignment_2_2_1()); }
(rule__Constraint__ParametersAssignment_2_2_1)
{ after(grammarAccess.getConstraintAccess().getParametersAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Actor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Actor__Group__0__Impl
	rule__Actor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getActorKeyword_0()); }

	'actor' 

{ after(grammarAccess.getActorAccess().getActorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Actor__Group__1__Impl
	rule__Actor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getNameAssignment_1()); }
(rule__Actor__NameAssignment_1)
{ after(grammarAccess.getActorAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Actor__Group__2__Impl
	rule__Actor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getGroup_2()); }
(rule__Actor__Group_2__0)?
{ after(grammarAccess.getActorAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Actor__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getAlternatives_3()); }
(rule__Actor__Alternatives_3)
{ after(grammarAccess.getActorAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Actor__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Actor__Group_2__0__Impl
	rule__Actor__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getExtendsKeyword_2_0()); }

	'extends' 

{ after(grammarAccess.getActorAccess().getExtendsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Actor__Group_2__1__Impl
	rule__Actor__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getSuperTypesAssignment_2_1()); }
(rule__Actor__SuperTypesAssignment_2_1)
{ after(grammarAccess.getActorAccess().getSuperTypesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Actor__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getGroup_2_2()); }
(rule__Actor__Group_2_2__0)*
{ after(grammarAccess.getActorAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Actor__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Actor__Group_2_2__0__Impl
	rule__Actor__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getActorAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Actor__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getSuperTypesAssignment_2_2_1()); }
(rule__Actor__SuperTypesAssignment_2_2_1)
{ after(grammarAccess.getActorAccess().getSuperTypesAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Actor__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Actor__Group_3_0__0__Impl
	rule__Actor__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getHasBodyAssignment_3_0_0()); }
(rule__Actor__HasBodyAssignment_3_0_0)
{ after(grammarAccess.getActorAccess().getHasBodyAssignment_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Actor__Group_3_0__1__Impl
	rule__Actor__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getBodyAssignment_3_0_1()); }
(rule__Actor__BodyAssignment_3_0_1)*
{ after(grammarAccess.getActorAccess().getBodyAssignment_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group_3_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Actor__Group_3_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_3_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getRightCurlyBracketKeyword_3_0_2()); }

	'}' 

{ after(grammarAccess.getActorAccess().getRightCurlyBracketKeyword_3_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ActionCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionCall__Group__0__Impl
	rule__ActionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionCallAccess().getHyphenMinusGreaterThanSignKeyword_0()); }

	'->' 

{ after(grammarAccess.getActionCallAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionCall__Group__1__Impl
	rule__ActionCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionCallAccess().getReferencedElementAssignment_1()); }
(rule__ActionCall__ReferencedElementAssignment_1)
{ after(grammarAccess.getActionCallAccess().getReferencedElementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionCall__Group__2__Impl
	rule__ActionCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionCallAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getActionCallAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionCall__Group__3__Impl
	rule__ActionCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionCallAccess().getGroup_3()); }
(rule__ActionCall__Group_3__0)?
{ after(grammarAccess.getActionCallAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionCall__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionCall__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionCall__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionCallAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getActionCallAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ActionCall__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionCall__Group_3__0__Impl
	rule__ActionCall__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionCall__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionCallAccess().getParametersAssignment_3_0()); }
(rule__ActionCall__ParametersAssignment_3_0)
{ after(grammarAccess.getActionCallAccess().getParametersAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionCall__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionCall__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionCall__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionCallAccess().getGroup_3_1()); }
(rule__ActionCall__Group_3_1__0)*
{ after(grammarAccess.getActionCallAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ActionCall__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionCall__Group_3_1__0__Impl
	rule__ActionCall__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionCall__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionCallAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getActionCallAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionCall__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionCall__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionCall__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionCallAccess().getParametersAssignment_3_1_1()); }
(rule__ActionCall__ParametersAssignment_3_1_1)
{ after(grammarAccess.getActionCallAccess().getParametersAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ActionCallStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionCallStatement__Group__0__Impl
	rule__ActionCallStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionCallStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionCallStatementAccess().getActionCallParserRuleCall_0()); }
	ruleActionCall
{ after(grammarAccess.getActionCallStatementAccess().getActionCallParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionCallStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionCallStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionCallStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionCallStatementAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getActionCallStatementAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Page__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__0__Impl
	rule__Page__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getPageKeyword_0()); }

	'page' 

{ after(grammarAccess.getPageAccess().getPageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__1__Impl
	rule__Page__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getNameAssignment_1()); }
(rule__Page__NameAssignment_1)
{ after(grammarAccess.getPageAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__2__Impl
	rule__Page__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getGroup_2()); }
(rule__Page__Group_2__0)?
{ after(grammarAccess.getPageAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__3__Impl
	rule__Page__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getControlledByKeyword_3()); }

	'controlledBy' 

{ after(grammarAccess.getPageAccess().getControlledByKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__4__Impl
	rule__Page__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getControllerAssignment_4()); }
(rule__Page__ControllerAssignment_4)
{ after(grammarAccess.getPageAccess().getControllerAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getAlternatives_5()); }
(rule__Page__Alternatives_5)
{ after(grammarAccess.getPageAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Page__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group_2__0__Impl
	rule__Page__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getPageAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group_2__1__Impl
	rule__Page__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getGroup_2_1()); }
(rule__Page__Group_2_1__0)?
{ after(grammarAccess.getPageAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getPageAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Page__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group_2_1__0__Impl
	rule__Page__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getParametersAssignment_2_1_0()); }
(rule__Page__ParametersAssignment_2_1_0)
{ after(grammarAccess.getPageAccess().getParametersAssignment_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getGroup_2_1_1()); }
(rule__Page__Group_2_1_1__0)*
{ after(grammarAccess.getPageAccess().getGroup_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Page__Group_2_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group_2_1_1__0__Impl
	rule__Page__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group_2_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getCommaKeyword_2_1_1_0()); }

	',' 

{ after(grammarAccess.getPageAccess().getCommaKeyword_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group_2_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group_2_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getParametersAssignment_2_1_1_1()); }
(rule__Page__ParametersAssignment_2_1_1_1)
{ after(grammarAccess.getPageAccess().getParametersAssignment_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Page__Group_5_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group_5_0__0__Impl
	rule__Page__Group_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group_5_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getHasBodyAssignment_5_0_0()); }
(rule__Page__HasBodyAssignment_5_0_0)
{ after(grammarAccess.getPageAccess().getHasBodyAssignment_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group_5_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group_5_0__1__Impl
	rule__Page__Group_5_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group_5_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getBodyAssignment_5_0_1()); }
(rule__Page__BodyAssignment_5_0_1)*
{ after(grammarAccess.getPageAccess().getBodyAssignment_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group_5_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group_5_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group_5_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getRightCurlyBracketKeyword_5_0_2()); }

	'}' 

{ after(grammarAccess.getPageAccess().getRightCurlyBracketKeyword_5_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Widget__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Widget__Group__0__Impl
	rule__Widget__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Widget__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWidgetAccess().getWidgetKeyword_0()); }

	'widget' 

{ after(grammarAccess.getWidgetAccess().getWidgetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Widget__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Widget__Group__1__Impl
	rule__Widget__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Widget__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWidgetAccess().getNameAssignment_1()); }
(rule__Widget__NameAssignment_1)
{ after(grammarAccess.getWidgetAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Widget__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Widget__Group__2__Impl
	rule__Widget__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Widget__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWidgetAccess().getGroup_2()); }
(rule__Widget__Group_2__0)?
{ after(grammarAccess.getWidgetAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Widget__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Widget__Group__3__Impl
	rule__Widget__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Widget__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWidgetAccess().getGroup_3()); }
(rule__Widget__Group_3__0)?
{ after(grammarAccess.getWidgetAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Widget__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Widget__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Widget__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWidgetAccess().getAlternatives_4()); }
(rule__Widget__Alternatives_4)
{ after(grammarAccess.getWidgetAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Widget__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Widget__Group_2__0__Impl
	rule__Widget__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Widget__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWidgetAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getWidgetAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Widget__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Widget__Group_2__1__Impl
	rule__Widget__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Widget__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWidgetAccess().getParametersAssignment_2_1()); }
(rule__Widget__ParametersAssignment_2_1)
{ after(grammarAccess.getWidgetAccess().getParametersAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Widget__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Widget__Group_2__2__Impl
	rule__Widget__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Widget__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWidgetAccess().getGroup_2_2()); }
(rule__Widget__Group_2_2__0)*
{ after(grammarAccess.getWidgetAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Widget__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Widget__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Widget__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWidgetAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getWidgetAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Widget__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Widget__Group_2_2__0__Impl
	rule__Widget__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Widget__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWidgetAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getWidgetAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Widget__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Widget__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Widget__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWidgetAccess().getParametersAssignment_2_2_1()); }
(rule__Widget__ParametersAssignment_2_2_1)
{ after(grammarAccess.getWidgetAccess().getParametersAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Widget__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Widget__Group_3__0__Impl
	rule__Widget__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Widget__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWidgetAccess().getControlledByKeyword_3_0()); }

	'controlledBy' 

{ after(grammarAccess.getWidgetAccess().getControlledByKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Widget__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Widget__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Widget__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWidgetAccess().getControllerAssignment_3_1()); }
(rule__Widget__ControllerAssignment_3_1)
{ after(grammarAccess.getWidgetAccess().getControllerAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Widget__Group_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Widget__Group_4_0__0__Impl
	rule__Widget__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Widget__Group_4_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWidgetAccess().getHasBodyAssignment_4_0_0()); }
(rule__Widget__HasBodyAssignment_4_0_0)
{ after(grammarAccess.getWidgetAccess().getHasBodyAssignment_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Widget__Group_4_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Widget__Group_4_0__1__Impl
	rule__Widget__Group_4_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Widget__Group_4_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWidgetAccess().getBodyAssignment_4_0_1()); }
(rule__Widget__BodyAssignment_4_0_1)*
{ after(grammarAccess.getWidgetAccess().getBodyAssignment_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Widget__Group_4_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Widget__Group_4_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Widget__Group_4_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWidgetAccess().getRightCurlyBracketKeyword_4_0_2()); }

	'}' 

{ after(grammarAccess.getWidgetAccess().getRightCurlyBracketKeyword_4_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IfView__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfView__Group__0__Impl
	rule__IfView__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfView__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfViewAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getIfViewAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfView__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfView__Group__1__Impl
	rule__IfView__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfView__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfViewAccess().getIfViewAction_1()); }
(

)
{ after(grammarAccess.getIfViewAccess().getIfViewAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfView__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfView__Group__2__Impl
	rule__IfView__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfView__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfViewAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getIfViewAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfView__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfView__Group__3__Impl
	rule__IfView__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfView__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfViewAccess().getConditionAssignment_3()); }
(rule__IfView__ConditionAssignment_3)
{ after(grammarAccess.getIfViewAccess().getConditionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfView__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfView__Group__4__Impl
	rule__IfView__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfView__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfViewAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getIfViewAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfView__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfView__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfView__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfViewAccess().getAlternatives_5()); }
(rule__IfView__Alternatives_5)
{ after(grammarAccess.getIfViewAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__IfView__Group_5_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfView__Group_5_0__0__Impl
	rule__IfView__Group_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfView__Group_5_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfViewAccess().getHasBodyAssignment_5_0_0()); }
(rule__IfView__HasBodyAssignment_5_0_0)
{ after(grammarAccess.getIfViewAccess().getHasBodyAssignment_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfView__Group_5_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfView__Group_5_0__1__Impl
	rule__IfView__Group_5_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfView__Group_5_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfViewAccess().getBodyAssignment_5_0_1()); }
(rule__IfView__BodyAssignment_5_0_1)*
{ after(grammarAccess.getIfViewAccess().getBodyAssignment_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfView__Group_5_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfView__Group_5_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfView__Group_5_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfViewAccess().getRightCurlyBracketKeyword_5_0_2()); }

	'}' 

{ after(grammarAccess.getIfViewAccess().getRightCurlyBracketKeyword_5_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ForView__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForView__Group__0__Impl
	rule__ForView__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForView__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForViewAccess().getForKeyword_0()); }

	'for' 

{ after(grammarAccess.getForViewAccess().getForKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForView__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForView__Group__1__Impl
	rule__ForView__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForView__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForViewAccess().getForViewAction_1()); }
(

)
{ after(grammarAccess.getForViewAccess().getForViewAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForView__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForView__Group__2__Impl
	rule__ForView__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForView__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForViewAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getForViewAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForView__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForView__Group__3__Impl
	rule__ForView__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForView__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForViewAccess().getVariableAssignment_3()); }
(rule__ForView__VariableAssignment_3)
{ after(grammarAccess.getForViewAccess().getVariableAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForView__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForView__Group__4__Impl
	rule__ForView__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForView__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForViewAccess().getInKeyword_4()); }

	'in' 

{ after(grammarAccess.getForViewAccess().getInKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForView__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForView__Group__5__Impl
	rule__ForView__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForView__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForViewAccess().getCollectionAssignment_5()); }
(rule__ForView__CollectionAssignment_5)
{ after(grammarAccess.getForViewAccess().getCollectionAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForView__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForView__Group__6__Impl
	rule__ForView__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForView__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForViewAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getForViewAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForView__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForView__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForView__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForViewAccess().getAlternatives_7()); }
(rule__ForView__Alternatives_7)
{ after(grammarAccess.getForViewAccess().getAlternatives_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__ForView__Group_7_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForView__Group_7_0__0__Impl
	rule__ForView__Group_7_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForView__Group_7_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForViewAccess().getHasBodyAssignment_7_0_0()); }
(rule__ForView__HasBodyAssignment_7_0_0)
{ after(grammarAccess.getForViewAccess().getHasBodyAssignment_7_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForView__Group_7_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForView__Group_7_0__1__Impl
	rule__ForView__Group_7_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForView__Group_7_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForViewAccess().getBodyAssignment_7_0_1()); }
(rule__ForView__BodyAssignment_7_0_1)*
{ after(grammarAccess.getForViewAccess().getBodyAssignment_7_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForView__Group_7_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForView__Group_7_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForView__Group_7_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForViewAccess().getRightCurlyBracketKeyword_7_0_2()); }

	'}' 

{ after(grammarAccess.getForViewAccess().getRightCurlyBracketKeyword_7_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ForVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForVariable__Group__0__Impl
	rule__ForVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForVariableAccess().getTypeAssignment_0()); }
(rule__ForVariable__TypeAssignment_0)
{ after(grammarAccess.getForVariableAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForVariable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForVariableAccess().getNameAssignment_1()); }
(rule__ForVariable__NameAssignment_1)
{ after(grammarAccess.getForVariableAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ViewInstanceNoAction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewInstanceNoAction__Group__0__Impl
	rule__ViewInstanceNoAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewInstanceNoAction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewInstanceNoActionAccess().getGroup_0()); }
(rule__ViewInstanceNoAction__Group_0__0)?
{ after(grammarAccess.getViewInstanceNoActionAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ViewInstanceNoAction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewInstanceNoAction__Group__1__Impl
	rule__ViewInstanceNoAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewInstanceNoAction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewInstanceNoActionAccess().getTypeAssignment_1()); }
(rule__ViewInstanceNoAction__TypeAssignment_1)
{ after(grammarAccess.getViewInstanceNoActionAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ViewInstanceNoAction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewInstanceNoAction__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewInstanceNoAction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewInstanceNoActionAccess().getGroup_2()); }
(rule__ViewInstanceNoAction__Group_2__0)?
{ after(grammarAccess.getViewInstanceNoActionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ViewInstanceNoAction__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewInstanceNoAction__Group_0__0__Impl
	rule__ViewInstanceNoAction__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewInstanceNoAction__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewInstanceNoActionAccess().getNameAssignment_0_0()); }
(rule__ViewInstanceNoAction__NameAssignment_0_0)
{ after(grammarAccess.getViewInstanceNoActionAccess().getNameAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ViewInstanceNoAction__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewInstanceNoAction__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewInstanceNoAction__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewInstanceNoActionAccess().getEqualsSignKeyword_0_1()); }

	'=' 

{ after(grammarAccess.getViewInstanceNoActionAccess().getEqualsSignKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ViewInstanceNoAction__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewInstanceNoAction__Group_2__0__Impl
	rule__ViewInstanceNoAction__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewInstanceNoAction__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewInstanceNoActionAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getViewInstanceNoActionAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ViewInstanceNoAction__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewInstanceNoAction__Group_2__1__Impl
	rule__ViewInstanceNoAction__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewInstanceNoAction__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewInstanceNoActionAccess().getParametersAssignment_2_1()); }
(rule__ViewInstanceNoAction__ParametersAssignment_2_1)
{ after(grammarAccess.getViewInstanceNoActionAccess().getParametersAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ViewInstanceNoAction__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewInstanceNoAction__Group_2__2__Impl
	rule__ViewInstanceNoAction__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewInstanceNoAction__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewInstanceNoActionAccess().getGroup_2_2()); }
(rule__ViewInstanceNoAction__Group_2_2__0)*
{ after(grammarAccess.getViewInstanceNoActionAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ViewInstanceNoAction__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewInstanceNoAction__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewInstanceNoAction__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewInstanceNoActionAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getViewInstanceNoActionAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ViewInstanceNoAction__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewInstanceNoAction__Group_2_2__0__Impl
	rule__ViewInstanceNoAction__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewInstanceNoAction__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewInstanceNoActionAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getViewInstanceNoActionAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ViewInstanceNoAction__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewInstanceNoAction__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewInstanceNoAction__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewInstanceNoActionAccess().getParametersAssignment_2_2_1()); }
(rule__ViewInstanceNoAction__ParametersAssignment_2_2_1)
{ after(grammarAccess.getViewInstanceNoActionAccess().getParametersAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ViewInstance__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewInstance__Group__0__Impl
	rule__ViewInstance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewInstance__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewInstanceAccess().getViewInstanceNoActionParserRuleCall_0()); }
	ruleViewInstanceNoAction
{ after(grammarAccess.getViewInstanceAccess().getViewInstanceNoActionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ViewInstance__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewInstance__Group__1__Impl
	rule__ViewInstance__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewInstance__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewInstanceAccess().getActionCallAssignment_1()); }
(rule__ViewInstance__ActionCallAssignment_1)?
{ after(grammarAccess.getViewInstanceAccess().getActionCallAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ViewInstance__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewInstance__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewInstance__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewInstanceAccess().getAlternatives_2()); }
(rule__ViewInstance__Alternatives_2)
{ after(grammarAccess.getViewInstanceAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ViewInstance__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewInstance__Group_2_0__0__Impl
	rule__ViewInstance__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewInstance__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewInstanceAccess().getHasBodyAssignment_2_0_0()); }
(rule__ViewInstance__HasBodyAssignment_2_0_0)
{ after(grammarAccess.getViewInstanceAccess().getHasBodyAssignment_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ViewInstance__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewInstance__Group_2_0__1__Impl
	rule__ViewInstance__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewInstance__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewInstanceAccess().getBodyAssignment_2_0_1()); }
(rule__ViewInstance__BodyAssignment_2_0_1)*
{ after(grammarAccess.getViewInstanceAccess().getBodyAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ViewInstance__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewInstance__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewInstance__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewInstanceAccess().getRightCurlyBracketKeyword_2_0_2()); }

	'}' 

{ after(grammarAccess.getViewInstanceAccess().getRightCurlyBracketKeyword_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NamedViewBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedViewBlock__Group__0__Impl
	rule__NamedViewBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedViewBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedViewBlockAccess().getNameAssignment_0()); }
(rule__NamedViewBlock__NameAssignment_0)
{ after(grammarAccess.getNamedViewBlockAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedViewBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedViewBlock__Group__1__Impl
	rule__NamedViewBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedViewBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedViewBlockAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getNamedViewBlockAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedViewBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedViewBlock__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedViewBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedViewBlockAccess().getAlternatives_2()); }
(rule__NamedViewBlock__Alternatives_2)
{ after(grammarAccess.getNamedViewBlockAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NamedViewBlock__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedViewBlock__Group_2_0__0__Impl
	rule__NamedViewBlock__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedViewBlock__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedViewBlockAccess().getHasBodyAssignment_2_0_0()); }
(rule__NamedViewBlock__HasBodyAssignment_2_0_0)
{ after(grammarAccess.getNamedViewBlockAccess().getHasBodyAssignment_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedViewBlock__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedViewBlock__Group_2_0__1__Impl
	rule__NamedViewBlock__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedViewBlock__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedViewBlockAccess().getBodyAssignment_2_0_1()); }
(rule__NamedViewBlock__BodyAssignment_2_0_1)*
{ after(grammarAccess.getNamedViewBlockAccess().getBodyAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedViewBlock__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedViewBlock__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedViewBlock__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedViewBlockAccess().getRightCurlyBracketKeyword_2_0_2()); }

	'}' 

{ after(grammarAccess.getNamedViewBlockAccess().getRightCurlyBracketKeyword_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ReferenceStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceStatement__Group__0__Impl
	rule__ReferenceStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceStatementAccess().getReferenceParserRuleCall_0()); }
	ruleReference
{ after(grammarAccess.getReferenceStatementAccess().getReferenceParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceStatement__Group__1__Impl
	rule__ReferenceStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceStatementAccess().getGroup_1()); }
(rule__ReferenceStatement__Group_1__0)?
{ after(grammarAccess.getReferenceStatementAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceStatementAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getReferenceStatementAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ReferenceStatement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceStatement__Group_1__0__Impl
	rule__ReferenceStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceStatement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceStatementAccess().getAssignmentLeftAction_1_0()); }
(

)
{ after(grammarAccess.getReferenceStatementAccess().getAssignmentLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceStatement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceStatement__Group_1__1__Impl
	rule__ReferenceStatement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceStatement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceStatementAccess().getAlternatives_1_1()); }
(rule__ReferenceStatement__Alternatives_1_1)
{ after(grammarAccess.getReferenceStatementAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceStatement__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceStatement__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceStatement__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceStatementAccess().getRightAssignment_1_2()); }
(rule__ReferenceStatement__RightAssignment_1_2)
{ after(grammarAccess.getReferenceStatementAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__If__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__0__Impl
	rule__If__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getIfAction_0()); }
(

)
{ after(grammarAccess.getIfAccess().getIfAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__1__Impl
	rule__If__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getIfKeyword_1()); }

	'if' 

{ after(grammarAccess.getIfAccess().getIfKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__2__Impl
	rule__If__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getIfAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__3__Impl
	rule__If__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getConditionAssignment_3()); }
(rule__If__ConditionAssignment_3)
{ after(grammarAccess.getIfAccess().getConditionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__4__Impl
	rule__If__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getIfAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__5__Impl
	rule__If__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getAlternatives_5()); }
(rule__If__Alternatives_5)
{ after(grammarAccess.getIfAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getGroup_6()); }
(rule__If__Group_6__0)?
{ after(grammarAccess.getIfAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__If__Group_5_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group_5_0__0__Impl
	rule__If__Group_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_5_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getHasBodyAssignment_5_0_0()); }
(rule__If__HasBodyAssignment_5_0_0)
{ after(grammarAccess.getIfAccess().getHasBodyAssignment_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group_5_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group_5_0__1__Impl
	rule__If__Group_5_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_5_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getBodyAssignment_5_0_1()); }
(rule__If__BodyAssignment_5_0_1)*
{ after(grammarAccess.getIfAccess().getBodyAssignment_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group_5_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group_5_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_5_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getRightCurlyBracketKeyword_5_0_2()); }

	'}' 

{ after(grammarAccess.getIfAccess().getRightCurlyBracketKeyword_5_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__If__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group_6__0__Impl
	rule__If__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getElseKeyword_6_0()); }
(
	'else' 
)
{ after(grammarAccess.getIfAccess().getElseKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getAlternatives_6_1()); }
(rule__If__Alternatives_6_1)
{ after(grammarAccess.getIfAccess().getAlternatives_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__If__Group_6_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group_6_1_0__0__Impl
	rule__If__Group_6_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_6_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getLeftCurlyBracketKeyword_6_1_0_0()); }

	'{' 

{ after(grammarAccess.getIfAccess().getLeftCurlyBracketKeyword_6_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group_6_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group_6_1_0__1__Impl
	rule__If__Group_6_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_6_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getElseBodyAssignment_6_1_0_1()); }
(rule__If__ElseBodyAssignment_6_1_0_1)*
{ after(grammarAccess.getIfAccess().getElseBodyAssignment_6_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group_6_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group_6_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_6_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getRightCurlyBracketKeyword_6_1_0_2()); }

	'}' 

{ after(grammarAccess.getIfAccess().getRightCurlyBracketKeyword_6_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__While__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__0__Impl
	rule__While__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getWhileAction_0()); }
(

)
{ after(grammarAccess.getWhileAccess().getWhileAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__1__Impl
	rule__While__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getWhileKeyword_1()); }

	'while' 

{ after(grammarAccess.getWhileAccess().getWhileKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__2__Impl
	rule__While__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getWhileAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__3__Impl
	rule__While__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getConditionAssignment_3()); }
(rule__While__ConditionAssignment_3)
{ after(grammarAccess.getWhileAccess().getConditionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__4__Impl
	rule__While__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getWhileAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getAlternatives_5()); }
(rule__While__Alternatives_5)
{ after(grammarAccess.getWhileAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__While__Group_5_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group_5_0__0__Impl
	rule__While__Group_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group_5_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getHasBodyAssignment_5_0_0()); }
(rule__While__HasBodyAssignment_5_0_0)
{ after(grammarAccess.getWhileAccess().getHasBodyAssignment_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group_5_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group_5_0__1__Impl
	rule__While__Group_5_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group_5_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getBodyAssignment_5_0_1()); }
(rule__While__BodyAssignment_5_0_1)*
{ after(grammarAccess.getWhileAccess().getBodyAssignment_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group_5_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group_5_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group_5_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getRightCurlyBracketKeyword_5_0_2()); }

	'}' 

{ after(grammarAccess.getWhileAccess().getRightCurlyBracketKeyword_5_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__For__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For__Group__0__Impl
	rule__For__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getForAction_0()); }
(

)
{ after(grammarAccess.getForAccess().getForAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For__Group__1__Impl
	rule__For__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getForKeyword_1()); }

	'for' 

{ after(grammarAccess.getForAccess().getForKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For__Group__2__Impl
	rule__For__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getForAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For__Group__3__Impl
	rule__For__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getVariableAssignment_3()); }
(rule__For__VariableAssignment_3)
{ after(grammarAccess.getForAccess().getVariableAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For__Group__4__Impl
	rule__For__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getInKeyword_4()); }

	'in' 

{ after(grammarAccess.getForAccess().getInKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For__Group__5__Impl
	rule__For__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getCollectionAssignment_5()); }
(rule__For__CollectionAssignment_5)
{ after(grammarAccess.getForAccess().getCollectionAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For__Group__6__Impl
	rule__For__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getForAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getAlternatives_7()); }
(rule__For__Alternatives_7)
{ after(grammarAccess.getForAccess().getAlternatives_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__For__Group_7_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For__Group_7_0__0__Impl
	rule__For__Group_7_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group_7_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getHasBodyAssignment_7_0_0()); }
(rule__For__HasBodyAssignment_7_0_0)
{ after(grammarAccess.getForAccess().getHasBodyAssignment_7_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group_7_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For__Group_7_0__1__Impl
	rule__For__Group_7_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group_7_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getBodyAssignment_7_0_1()); }
(rule__For__BodyAssignment_7_0_1)*
{ after(grammarAccess.getForAccess().getBodyAssignment_7_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group_7_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For__Group_7_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group_7_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getRightCurlyBracketKeyword_7_0_2()); }

	'}' 

{ after(grammarAccess.getForAccess().getRightCurlyBracketKeyword_7_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Variable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getTypeAssignment_0()); }
(rule__Variable__TypeAssignment_0)
{ after(grammarAccess.getVariableAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__1__Impl
	rule__Variable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameAssignment_1()); }
(rule__Variable__NameAssignment_1)
{ after(grammarAccess.getVariableAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__2__Impl
	rule__Variable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getGroup_2()); }
(rule__Variable__Group_2__0)?
{ after(grammarAccess.getVariableAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getVariableAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Variable__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_2__0__Impl
	rule__Variable__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getEqualsSignKeyword_2_0()); }

	'=' 

{ after(grammarAccess.getVariableAccess().getEqualsSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getValueAssignment_2_1()); }
(rule__Variable__ValueAssignment_2_1)
{ after(grammarAccess.getVariableAccess().getValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Show__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Show__Group__0__Impl
	rule__Show__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Show__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShowAccess().getShowAction_0()); }
(

)
{ after(grammarAccess.getShowAccess().getShowAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Show__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Show__Group__1__Impl
	rule__Show__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Show__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShowAccess().getShowKeyword_1()); }

	'show' 

{ after(grammarAccess.getShowAccess().getShowKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Show__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Show__Group__2__Impl
	rule__Show__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Show__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShowAccess().getExpressionAssignment_2()); }
(rule__Show__ExpressionAssignment_2)
{ after(grammarAccess.getShowAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Show__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Show__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Show__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShowAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getShowAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getBoolTermParserRuleCall_0()); }
	ruleBoolTerm
{ after(grammarAccess.getExpressionAccess().getBoolTermParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
(rule__Expression__Group_1__0)*
{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getBinaryOperatorLeftAction_1_0()); }
(

)
{ after(grammarAccess.getExpressionAccess().getBinaryOperatorLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__1__Impl
	rule__Expression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getSymbolAssignment_1_1()); }
(rule__Expression__SymbolAssignment_1_1)
{ after(grammarAccess.getExpressionAccess().getSymbolAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRightAssignment_1_2()); }
(rule__Expression__RightAssignment_1_2)
{ after(grammarAccess.getExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BoolTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BoolTerm__Group__0__Impl
	rule__BoolTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolTermAccess().getNegationParserRuleCall_0()); }
	ruleNegation
{ after(grammarAccess.getBoolTermAccess().getNegationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BoolTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BoolTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolTermAccess().getGroup_1()); }
(rule__BoolTerm__Group_1__0)*
{ after(grammarAccess.getBoolTermAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BoolTerm__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BoolTerm__Group_1__0__Impl
	rule__BoolTerm__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolTerm__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolTermAccess().getBinaryOperatorLeftAction_1_0()); }
(

)
{ after(grammarAccess.getBoolTermAccess().getBinaryOperatorLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BoolTerm__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BoolTerm__Group_1__1__Impl
	rule__BoolTerm__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolTerm__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolTermAccess().getSymbolAssignment_1_1()); }
(rule__BoolTerm__SymbolAssignment_1_1)
{ after(grammarAccess.getBoolTermAccess().getSymbolAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BoolTerm__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BoolTerm__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolTerm__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolTermAccess().getRightAssignment_1_2()); }
(rule__BoolTerm__RightAssignment_1_2)
{ after(grammarAccess.getBoolTermAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Negation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Negation__Group_1__0__Impl
	rule__Negation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegationAccess().getUnaryOperatorAction_1_0()); }
(

)
{ after(grammarAccess.getNegationAccess().getUnaryOperatorAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Negation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Negation__Group_1__1__Impl
	rule__Negation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegationAccess().getSymbolAssignment_1_1()); }
(rule__Negation__SymbolAssignment_1_1)
{ after(grammarAccess.getNegationAccess().getSymbolAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Negation__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Negation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegationAccess().getExpressionAssignment_1_2()); }
(rule__Negation__ExpressionAssignment_1_2)
{ after(grammarAccess.getNegationAccess().getExpressionAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Comparison__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group__0__Impl
	rule__Comparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getArithmeticExpressionParserRuleCall_0()); }
	ruleArithmeticExpression
{ after(grammarAccess.getComparisonAccess().getArithmeticExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getGroup_1()); }
(rule__Comparison__Group_1__0)*
{ after(grammarAccess.getComparisonAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Comparison__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1__0__Impl
	rule__Comparison__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getBinaryOperatorLeftAction_1_0()); }
(

)
{ after(grammarAccess.getComparisonAccess().getBinaryOperatorLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1__1__Impl
	rule__Comparison__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getAlternatives_1_1()); }
(rule__Comparison__Alternatives_1_1)
{ after(grammarAccess.getComparisonAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); }
(rule__Comparison__RightAssignment_1_2)
{ after(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ArithmeticExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithmeticExpression__Group__0__Impl
	rule__ArithmeticExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticExpressionAccess().getTermParserRuleCall_0()); }
	ruleTerm
{ after(grammarAccess.getArithmeticExpressionAccess().getTermParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithmeticExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticExpressionAccess().getGroup_1()); }
(rule__ArithmeticExpression__Group_1__0)*
{ after(grammarAccess.getArithmeticExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArithmeticExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithmeticExpression__Group_1__0__Impl
	rule__ArithmeticExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticExpressionAccess().getBinaryOperatorLeftAction_1_0()); }
(

)
{ after(grammarAccess.getArithmeticExpressionAccess().getBinaryOperatorLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithmeticExpression__Group_1__1__Impl
	rule__ArithmeticExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticExpressionAccess().getAlternatives_1_1()); }
(rule__ArithmeticExpression__Alternatives_1_1)
{ after(grammarAccess.getArithmeticExpressionAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithmeticExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticExpressionAccess().getRightAssignment_1_2()); }
(rule__ArithmeticExpression__RightAssignment_1_2)
{ after(grammarAccess.getArithmeticExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Term__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group__0__Impl
	rule__Term__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getNegativeParserRuleCall_0()); }
	ruleNegative
{ after(grammarAccess.getTermAccess().getNegativeParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getGroup_1()); }
(rule__Term__Group_1__0)*
{ after(grammarAccess.getTermAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Term__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group_1__0__Impl
	rule__Term__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getBinaryOperatorLeftAction_1_0()); }
(

)
{ after(grammarAccess.getTermAccess().getBinaryOperatorLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group_1__1__Impl
	rule__Term__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getAlternatives_1_1()); }
(rule__Term__Alternatives_1_1)
{ after(grammarAccess.getTermAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getRightAssignment_1_2()); }
(rule__Term__RightAssignment_1_2)
{ after(grammarAccess.getTermAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Negative__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Negative__Group_1__0__Impl
	rule__Negative__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Negative__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegativeAccess().getUnaryOperatorAction_1_0()); }
(

)
{ after(grammarAccess.getNegativeAccess().getUnaryOperatorAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Negative__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Negative__Group_1__1__Impl
	rule__Negative__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Negative__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegativeAccess().getHyphenMinusKeyword_1_1()); }

	'-' 

{ after(grammarAccess.getNegativeAccess().getHyphenMinusKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Negative__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Negative__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Negative__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegativeAccess().getExpressionAssignment_1_2()); }
(rule__Negative__ExpressionAssignment_1_2)
{ after(grammarAccess.getNegativeAccess().getExpressionAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Factor__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Factor__Group_0__0__Impl
	rule__Factor__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getFactorAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Factor__Group_0__1__Impl
	rule__Factor__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getExpressionParserRuleCall_0_1()); }
	ruleExpression
{ after(grammarAccess.getFactorAccess().getExpressionParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Factor__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getFactorAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StructInstance__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructInstance__Group__0__Impl
	rule__StructInstance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructInstance__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructInstanceAccess().getNewKeyword_0()); }

	'new' 

{ after(grammarAccess.getStructInstanceAccess().getNewKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructInstance__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructInstance__Group__1__Impl
	rule__StructInstance__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructInstance__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructInstanceAccess().getTypeAssignment_1()); }
(rule__StructInstance__TypeAssignment_1)
{ after(grammarAccess.getStructInstanceAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructInstance__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructInstance__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructInstance__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructInstanceAccess().getGroup_2()); }
(rule__StructInstance__Group_2__0)?
{ after(grammarAccess.getStructInstanceAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StructInstance__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructInstance__Group_2__0__Impl
	rule__StructInstance__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructInstance__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructInstanceAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getStructInstanceAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructInstance__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructInstance__Group_2__1__Impl
	rule__StructInstance__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructInstance__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructInstanceAccess().getParametersAssignment_2_1()); }
(rule__StructInstance__ParametersAssignment_2_1)
{ after(grammarAccess.getStructInstanceAccess().getParametersAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructInstance__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructInstance__Group_2__2__Impl
	rule__StructInstance__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructInstance__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructInstanceAccess().getGroup_2_2()); }
(rule__StructInstance__Group_2_2__0)*
{ after(grammarAccess.getStructInstanceAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructInstance__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructInstance__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructInstance__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructInstanceAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getStructInstanceAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__StructInstance__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructInstance__Group_2_2__0__Impl
	rule__StructInstance__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructInstance__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructInstanceAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getStructInstanceAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructInstance__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructInstance__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructInstance__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructInstanceAccess().getParametersAssignment_2_2_1()); }
(rule__StructInstance__ParametersAssignment_2_2_1)
{ after(grammarAccess.getStructInstanceAccess().getParametersAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypedElementReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedElementReference__Group__0__Impl
	rule__TypedElementReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedElementReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedElementReferenceAccess().getAlternatives_0()); }
(rule__TypedElementReference__Alternatives_0)
{ after(grammarAccess.getTypedElementReferenceAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedElementReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedElementReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedElementReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedElementReferenceAccess().getTailAssignment_1()); }
(rule__TypedElementReference__TailAssignment_1)?
{ after(grammarAccess.getTypedElementReferenceAccess().getTailAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableReference__Group__0__Impl
	rule__VariableReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getVariableReferenceAction_0()); }
(

)
{ after(grammarAccess.getVariableReferenceAccess().getVariableReferenceAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getReferencedElementAssignment_1()); }
(rule__VariableReference__ReferencedElementAssignment_1)
{ after(grammarAccess.getVariableReferenceAccess().getReferencedElementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MethodCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group__0__Impl
	rule__MethodCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getMethodCallAction_0()); }
(

)
{ after(grammarAccess.getMethodCallAccess().getMethodCallAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group__1__Impl
	rule__MethodCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getReferencedElementAssignment_1()); }
(rule__MethodCall__ReferencedElementAssignment_1)
{ after(grammarAccess.getMethodCallAccess().getReferencedElementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group__2__Impl
	rule__MethodCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getMethodCallAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group__3__Impl
	rule__MethodCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getGroup_3()); }
(rule__MethodCall__Group_3__0)?
{ after(grammarAccess.getMethodCallAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getMethodCallAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MethodCall__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_3__0__Impl
	rule__MethodCall__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getParametersAssignment_3_0()); }
(rule__MethodCall__ParametersAssignment_3_0)
{ after(grammarAccess.getMethodCallAccess().getParametersAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getGroup_3_1()); }
(rule__MethodCall__Group_3_1__0)*
{ after(grammarAccess.getMethodCallAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MethodCall__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_3_1__0__Impl
	rule__MethodCall__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getMethodCallAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getParametersAssignment_3_1_1()); }
(rule__MethodCall__ParametersAssignment_3_1_1)
{ after(grammarAccess.getMethodCallAccess().getParametersAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReferenceTail__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceTail__Group__0__Impl
	rule__ReferenceTail__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTail__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTailAccess().getFullStopKeyword_0()); }

	'.' 

{ after(grammarAccess.getReferenceTailAccess().getFullStopKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceTail__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceTail__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTail__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTailAccess().getTypedElementReferenceParserRuleCall_1()); }
	ruleTypedElementReference
{ after(grammarAccess.getReferenceTailAccess().getTypedElementReferenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Decimal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Decimal__Group__0__Impl
	rule__Decimal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Decimal__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecimalAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getDecimalAccess().getINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Decimal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Decimal__Group__1__Impl
	rule__Decimal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Decimal__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecimalAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getDecimalAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Decimal__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Decimal__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Decimal__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecimalAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
{ after(grammarAccess.getDecimalAccess().getINTTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BoolValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BoolValue__Group__0__Impl
	rule__BoolValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolValueAccess().getBoolValueAction_0()); }
(

)
{ after(grammarAccess.getBoolValueAccess().getBoolValueAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BoolValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BoolValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolValueAccess().getLiteralAssignment_1()); }
(rule__BoolValue__LiteralAssignment_1)
{ after(grammarAccess.getBoolValueAccess().getLiteralAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ResourceName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceName__Group__0__Impl
	rule__ResourceName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceNameAccess().getDollarSignKeyword_0()); }

	'$' 

{ after(grammarAccess.getResourceNameAccess().getDollarSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceNameAccess().getQualifiedNameParserRuleCall_1()); }
	ruleQualifiedName
{ after(grammarAccess.getResourceNameAccess().getQualifiedNameParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getAlternatives_0()); }
(rule__QualifiedName__Alternatives_0)
{ after(grammarAccess.getQualifiedNameAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getAlternatives_1_1()); }
(rule__QualifiedName__Alternatives_1_1)
{ after(grammarAccess.getQualifiedNameAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__InformationSystem__BodyAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInformationSystemAccess().getBodyPackageParserRuleCall_0()); }
	rulePackage{ after(grammarAccess.getInformationSystemAccess().getBodyPackageParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getPackageAccess().getNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__ImportsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getImportsImportParserRuleCall_3_0()); }
	ruleImport{ after(grammarAccess.getPackageAccess().getImportsImportParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__HasBodyAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getHasBodyLeftCurlyBracketKeyword_4_1_0()); }
(
{ before(grammarAccess.getPackageAccess().getHasBodyLeftCurlyBracketKeyword_4_1_0()); }

	'{' 

{ after(grammarAccess.getPackageAccess().getHasBodyLeftCurlyBracketKeyword_4_1_0()); }
)

{ after(grammarAccess.getPackageAccess().getHasBodyLeftCurlyBracketKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__BodyAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getBodyResourceParserRuleCall_4_2_0()); }
	ruleResource{ after(grammarAccess.getPackageAccess().getBodyResourceParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__BodyAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getBodyAlternatives_5_0()); }
(rule__Package__BodyAlternatives_5_0)
{ after(grammarAccess.getPackageAccess().getBodyAlternatives_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedPackageAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedPackagePackageCrossReference_1_0()); }
(
{ before(grammarAccess.getImportAccess().getImportedPackagePackageQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getImportAccess().getImportedPackagePackageQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getImportAccess().getImportedPackagePackageCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceAccess().getNameResourceNameParserRuleCall_0_0()); }
	ruleResourceName{ after(grammarAccess.getResourceAccess().getNameResourceNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceBundle__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceBundleAccess().getNameUPPER_CASE_IDTerminalRuleCall_1_0()); }
	RULE_UPPER_CASE_ID{ after(grammarAccess.getResourceBundleAccess().getNameUPPER_CASE_IDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceBundle__BodyAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceBundleAccess().getBodyResourceAssignmentParserRuleCall_3_0()); }
	ruleResourceAssignment{ after(grammarAccess.getResourceBundleAccess().getBodyResourceAssignmentParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceAssignment__LeftAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceAssignmentAccess().getLeftResourceReferenceParserRuleCall_0_0()); }
	ruleResourceReference{ after(grammarAccess.getResourceAssignmentAccess().getLeftResourceReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceAssignment__RightAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceAssignmentAccess().getRightStringValueParserRuleCall_2_0()); }
	ruleStringValue{ after(grammarAccess.getResourceAssignmentAccess().getRightStringValueParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__AbstractAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getAbstractAbstractKeyword_0_0()); }
(
{ before(grammarAccess.getEntityAccess().getAbstractAbstractKeyword_0_0()); }

	'abstract' 

{ after(grammarAccess.getEntityAccess().getAbstractAbstractKeyword_0_0()); }
)

{ after(grammarAccess.getEntityAccess().getAbstractAbstractKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNameUPPER_CASE_IDTerminalRuleCall_2_0()); }
	RULE_UPPER_CASE_ID{ after(grammarAccess.getEntityAccess().getNameUPPER_CASE_IDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__SuperTypesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getSuperTypesTypeParserRuleCall_3_1_0()); }
	ruleType{ after(grammarAccess.getEntityAccess().getSuperTypesTypeParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__SuperTypesAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getSuperTypesTypeParserRuleCall_3_2_1_0()); }
	ruleType{ after(grammarAccess.getEntityAccess().getSuperTypesTypeParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__HasBodyAssignment_4_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getHasBodyLeftCurlyBracketKeyword_4_0_0_0()); }
(
{ before(grammarAccess.getEntityAccess().getHasBodyLeftCurlyBracketKeyword_4_0_0_0()); }

	'{' 

{ after(grammarAccess.getEntityAccess().getHasBodyLeftCurlyBracketKeyword_4_0_0_0()); }
)

{ after(grammarAccess.getEntityAccess().getHasBodyLeftCurlyBracketKeyword_4_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__BodyAssignment_4_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getBodyAttributeParserRuleCall_4_0_1_0()); }
	ruleAttribute{ after(grammarAccess.getEntityAccess().getBodyAttributeParserRuleCall_4_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getTypeTypeParserRuleCall_0_0()); }
	ruleType{ after(grammarAccess.getAttributeAccess().getTypeTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameLOWER_CASE_IDTerminalRuleCall_1_0()); }
	RULE_LOWER_CASE_ID{ after(grammarAccess.getAttributeAccess().getNameLOWER_CASE_IDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__ConstraintsAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getConstraintsConstraintInstanceParserRuleCall_2_2_0()); }
	ruleConstraintInstance{ after(grammarAccess.getAttributeAccess().getConstraintsConstraintInstanceParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__ConstraintsAssignment_2_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getConstraintsConstraintInstanceParserRuleCall_2_3_1_0()); }
	ruleConstraintInstance{ after(grammarAccess.getAttributeAccess().getConstraintsConstraintInstanceParserRuleCall_2_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__OppositeAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getOppositeAttributeCrossReference_3_1_0()); }
(
{ before(grammarAccess.getAttributeAccess().getOppositeAttributeQualifiedNameParserRuleCall_3_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getAttributeAccess().getOppositeAttributeQualifiedNameParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getAttributeAccess().getOppositeAttributeCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DTO__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTOAccess().getNameUPPER_CASE_IDTerminalRuleCall_1_0()); }
	RULE_UPPER_CASE_ID{ after(grammarAccess.getDTOAccess().getNameUPPER_CASE_IDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DTO__SuperTypesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTOAccess().getSuperTypesTypeParserRuleCall_2_1_0()); }
	ruleType{ after(grammarAccess.getDTOAccess().getSuperTypesTypeParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DTO__SuperTypesAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTOAccess().getSuperTypesTypeParserRuleCall_2_2_1_0()); }
	ruleType{ after(grammarAccess.getDTOAccess().getSuperTypesTypeParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DTO__HasBodyAssignment_3_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTOAccess().getHasBodyLeftCurlyBracketKeyword_3_0_0_0()); }
(
{ before(grammarAccess.getDTOAccess().getHasBodyLeftCurlyBracketKeyword_3_0_0_0()); }

	'{' 

{ after(grammarAccess.getDTOAccess().getHasBodyLeftCurlyBracketKeyword_3_0_0_0()); }
)

{ after(grammarAccess.getDTOAccess().getHasBodyLeftCurlyBracketKeyword_3_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DTO__BodyAssignment_3_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTOAccess().getBodyDTOAttributeParserRuleCall_3_0_1_0()); }
	ruleDTOAttribute{ after(grammarAccess.getDTOAccess().getBodyDTOAttributeParserRuleCall_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DTOAttribute__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTOAttributeAccess().getTypeTypeParserRuleCall_0_0()); }
	ruleType{ after(grammarAccess.getDTOAttributeAccess().getTypeTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DTOAttribute__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTOAttributeAccess().getNameLOWER_CASE_IDTerminalRuleCall_1_0()); }
	RULE_LOWER_CASE_ID{ after(grammarAccess.getDTOAttributeAccess().getNameLOWER_CASE_IDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getNameUPPER_CASE_IDTerminalRuleCall_1_0()); }
	RULE_UPPER_CASE_ID{ after(grammarAccess.getEnumAccess().getNameUPPER_CASE_IDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__BodyAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getBodyEnumItemParserRuleCall_3_0()); }
	ruleEnumItem{ after(grammarAccess.getEnumAccess().getBodyEnumItemParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__BodyAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getBodyEnumItemParserRuleCall_4_1_0()); }
	ruleEnumItem{ after(grammarAccess.getEnumAccess().getBodyEnumItemParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumItem__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumItemAccess().getNameLOWER_CASE_IDTerminalRuleCall_0()); }
	RULE_LOWER_CASE_ID{ after(grammarAccess.getEnumItemAccess().getNameLOWER_CASE_IDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeTypeParserRuleCall_0_0()); }
	ruleType{ after(grammarAccess.getParameterAccess().getTypeTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameLOWER_CASE_IDTerminalRuleCall_1_0()); }
	RULE_LOWER_CASE_ID{ after(grammarAccess.getParameterAccess().getNameLOWER_CASE_IDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedType__ReferencedElementAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeAccess().getReferencedElementTypeSpecificationCrossReference_0_0()); }
(
{ before(grammarAccess.getParameterizedTypeAccess().getReferencedElementTypeSpecificationUPPER_CASE_IDTerminalRuleCall_0_0_1()); }
	RULE_UPPER_CASE_ID{ after(grammarAccess.getParameterizedTypeAccess().getReferencedElementTypeSpecificationUPPER_CASE_IDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getParameterizedTypeAccess().getReferencedElementTypeSpecificationCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedType__TypeParametersAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeAccess().getTypeParametersTypeParserRuleCall_2_0()); }
	ruleType{ after(grammarAccess.getParameterizedTypeAccess().getTypeParametersTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedType__TypeParametersAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeAccess().getTypeParametersTypeParserRuleCall_3_1_0()); }
	ruleType{ after(grammarAccess.getParameterizedTypeAccess().getTypeParametersTypeParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__ReferencedElementAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getReferencedElementTypeSpecificationCrossReference_0()); }
(
{ before(grammarAccess.getSimpleTypeAccess().getReferencedElementTypeSpecificationUPPER_CASE_IDTerminalRuleCall_0_1()); }
	RULE_UPPER_CASE_ID{ after(grammarAccess.getSimpleTypeAccess().getReferencedElementTypeSpecificationUPPER_CASE_IDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getSimpleTypeAccess().getReferencedElementTypeSpecificationCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintInstance__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintInstanceAccess().getTypeConstraintTypeParserRuleCall_0_0()); }
	ruleConstraintType{ after(grammarAccess.getConstraintInstanceAccess().getTypeConstraintTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintInstance__ParametersAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintInstanceAccess().getParametersExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getConstraintInstanceAccess().getParametersExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintInstance__ParametersAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintInstanceAccess().getParametersExpressionParserRuleCall_1_2_1_0()); }
	ruleExpression{ after(grammarAccess.getConstraintInstanceAccess().getParametersExpressionParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintType__ReferencedElementAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintTypeAccess().getReferencedElementConstraintCrossReference_0()); }
(
{ before(grammarAccess.getConstraintTypeAccess().getReferencedElementConstraintUPPER_CASE_IDTerminalRuleCall_0_1()); }
	RULE_UPPER_CASE_ID{ after(grammarAccess.getConstraintTypeAccess().getReferencedElementConstraintUPPER_CASE_IDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getConstraintTypeAccess().getReferencedElementConstraintCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__AbstractAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveAccess().getAbstractAbstractKeyword_0_0()); }
(
{ before(grammarAccess.getPrimitiveAccess().getAbstractAbstractKeyword_0_0()); }

	'abstract' 

{ after(grammarAccess.getPrimitiveAccess().getAbstractAbstractKeyword_0_0()); }
)

{ after(grammarAccess.getPrimitiveAccess().getAbstractAbstractKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveAccess().getNameUPPER_CASE_IDTerminalRuleCall_2_0()); }
	RULE_UPPER_CASE_ID{ after(grammarAccess.getPrimitiveAccess().getNameUPPER_CASE_IDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__GenericTypeParametersAssignment_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveAccess().getGenericTypeParametersGenericTypeSpecificationParserRuleCall_3_1_0_0()); }
	ruleGenericTypeSpecification{ after(grammarAccess.getPrimitiveAccess().getGenericTypeParametersGenericTypeSpecificationParserRuleCall_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__GenericTypeParametersAssignment_3_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveAccess().getGenericTypeParametersGenericTypeSpecificationParserRuleCall_3_1_1_1_0()); }
	ruleGenericTypeSpecification{ after(grammarAccess.getPrimitiveAccess().getGenericTypeParametersGenericTypeSpecificationParserRuleCall_3_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__SuperTypesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveAccess().getSuperTypesTypeParserRuleCall_4_1_0()); }
	ruleType{ after(grammarAccess.getPrimitiveAccess().getSuperTypesTypeParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GenericTypeSpecification__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericTypeSpecificationAccess().getNameUPPER_CASE_IDTerminalRuleCall_0_0()); }
	RULE_UPPER_CASE_ID{ after(grammarAccess.getGenericTypeSpecificationAccess().getNameUPPER_CASE_IDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GenericTypeSpecification__SuperTypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericTypeSpecificationAccess().getSuperTypeTypeParserRuleCall_1_1_0()); }
	ruleType{ after(grammarAccess.getGenericTypeSpecificationAccess().getSuperTypeTypeParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Service__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getNameUPPER_CASE_IDTerminalRuleCall_1_0()); }
	RULE_UPPER_CASE_ID{ after(grammarAccess.getServiceAccess().getNameUPPER_CASE_IDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Service__GenericTypeParametersAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getGenericTypeParametersGenericTypeSpecificationParserRuleCall_2_1_0_0()); }
	ruleGenericTypeSpecification{ after(grammarAccess.getServiceAccess().getGenericTypeParametersGenericTypeSpecificationParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Service__GenericTypeParametersAssignment_2_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getGenericTypeParametersGenericTypeSpecificationParserRuleCall_2_1_1_1_0()); }
	ruleGenericTypeSpecification{ after(grammarAccess.getServiceAccess().getGenericTypeParametersGenericTypeSpecificationParserRuleCall_2_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Service__SuperTypesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getSuperTypesTypeParserRuleCall_3_1_0()); }
	ruleType{ after(grammarAccess.getServiceAccess().getSuperTypesTypeParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Service__HasBodyAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getHasBodyLeftCurlyBracketKeyword_4_0()); }
(
{ before(grammarAccess.getServiceAccess().getHasBodyLeftCurlyBracketKeyword_4_0()); }

	'{' 

{ after(grammarAccess.getServiceAccess().getHasBodyLeftCurlyBracketKeyword_4_0()); }
)

{ after(grammarAccess.getServiceAccess().getHasBodyLeftCurlyBracketKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Service__BodyAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getBodyFeatureParserRuleCall_5_0()); }
	ruleFeature{ after(grammarAccess.getServiceAccess().getBodyFeatureParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NativeMethod__NativeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeMethodAccess().getNativeNativeKeyword_0_0()); }
(
{ before(grammarAccess.getNativeMethodAccess().getNativeNativeKeyword_0_0()); }

	'native' 

{ after(grammarAccess.getNativeMethodAccess().getNativeNativeKeyword_0_0()); }
)

{ after(grammarAccess.getNativeMethodAccess().getNativeNativeKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NativeMethod__GenericTypeParametersAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeMethodAccess().getGenericTypeParametersGenericTypeSpecificationParserRuleCall_1_1_0_0()); }
	ruleGenericTypeSpecification{ after(grammarAccess.getNativeMethodAccess().getGenericTypeParametersGenericTypeSpecificationParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NativeMethod__GenericTypeParametersAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeMethodAccess().getGenericTypeParametersGenericTypeSpecificationParserRuleCall_1_1_1_1_0()); }
	ruleGenericTypeSpecification{ after(grammarAccess.getNativeMethodAccess().getGenericTypeParametersGenericTypeSpecificationParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NativeMethod__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeMethodAccess().getTypeTypeParserRuleCall_2_0()); }
	ruleType{ after(grammarAccess.getNativeMethodAccess().getTypeTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NativeMethod__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeMethodAccess().getNameLOWER_CASE_IDTerminalRuleCall_3_0()); }
	RULE_LOWER_CASE_ID{ after(grammarAccess.getNativeMethodAccess().getNameLOWER_CASE_IDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NativeMethod__ParametersAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeMethodAccess().getParametersParameterParserRuleCall_5_0_0()); }
	ruleParameter{ after(grammarAccess.getNativeMethodAccess().getParametersParameterParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NativeMethod__ParametersAssignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeMethodAccess().getParametersParameterParserRuleCall_5_1_1_0()); }
	ruleParameter{ after(grammarAccess.getNativeMethodAccess().getParametersParameterParserRuleCall_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegularMethod__GenericTypeParametersAssignment_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularMethodAccess().getGenericTypeParametersGenericTypeSpecificationParserRuleCall_0_1_0_0()); }
	ruleGenericTypeSpecification{ after(grammarAccess.getRegularMethodAccess().getGenericTypeParametersGenericTypeSpecificationParserRuleCall_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegularMethod__GenericTypeParametersAssignment_0_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularMethodAccess().getGenericTypeParametersGenericTypeSpecificationParserRuleCall_0_1_1_1_0()); }
	ruleGenericTypeSpecification{ after(grammarAccess.getRegularMethodAccess().getGenericTypeParametersGenericTypeSpecificationParserRuleCall_0_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegularMethod__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularMethodAccess().getTypeTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getRegularMethodAccess().getTypeTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegularMethod__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularMethodAccess().getNameLOWER_CASE_IDTerminalRuleCall_2_0()); }
	RULE_LOWER_CASE_ID{ after(grammarAccess.getRegularMethodAccess().getNameLOWER_CASE_IDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegularMethod__ParametersAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularMethodAccess().getParametersParameterParserRuleCall_4_0_0()); }
	ruleParameter{ after(grammarAccess.getRegularMethodAccess().getParametersParameterParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegularMethod__ParametersAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularMethodAccess().getParametersParameterParserRuleCall_4_1_1_0()); }
	ruleParameter{ after(grammarAccess.getRegularMethodAccess().getParametersParameterParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegularMethod__HasBodyAssignment_6_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularMethodAccess().getHasBodyLeftCurlyBracketKeyword_6_0_0_0()); }
(
{ before(grammarAccess.getRegularMethodAccess().getHasBodyLeftCurlyBracketKeyword_6_0_0_0()); }

	'{' 

{ after(grammarAccess.getRegularMethodAccess().getHasBodyLeftCurlyBracketKeyword_6_0_0_0()); }
)

{ after(grammarAccess.getRegularMethodAccess().getHasBodyLeftCurlyBracketKeyword_6_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegularMethod__BodyAssignment_6_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularMethodAccess().getBodyMethodStatementParserRuleCall_6_0_1_0()); }
	ruleMethodStatement{ after(grammarAccess.getRegularMethodAccess().getBodyMethodStatementParserRuleCall_6_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceAttribute__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAttributeAccess().getTypeTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getServiceAttributeAccess().getTypeTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceAttribute__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAttributeAccess().getNameLOWER_CASE_IDTerminalRuleCall_2_0()); }
	RULE_LOWER_CASE_ID{ after(grammarAccess.getServiceAttributeAccess().getNameLOWER_CASE_IDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControllerAccess().getNameUPPER_CASE_IDTerminalRuleCall_1_0()); }
	RULE_UPPER_CASE_ID{ after(grammarAccess.getControllerAccess().getNameUPPER_CASE_IDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__HasBodyAssignment_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControllerAccess().getHasBodyLeftCurlyBracketKeyword_2_0_0_0()); }
(
{ before(grammarAccess.getControllerAccess().getHasBodyLeftCurlyBracketKeyword_2_0_0_0()); }

	'{' 

{ after(grammarAccess.getControllerAccess().getHasBodyLeftCurlyBracketKeyword_2_0_0_0()); }
)

{ after(grammarAccess.getControllerAccess().getHasBodyLeftCurlyBracketKeyword_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__BodyAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControllerAccess().getBodyAlternatives_2_0_1_0()); }
(rule__Controller__BodyAlternatives_2_0_1_0)
{ after(grammarAccess.getControllerAccess().getBodyAlternatives_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__DefaultAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getDefaultDefaultKeyword_0_0_0()); }
(
{ before(grammarAccess.getActionAccess().getDefaultDefaultKeyword_0_0_0()); }

	'default' 

{ after(grammarAccess.getActionAccess().getDefaultDefaultKeyword_0_0_0()); }
)

{ after(grammarAccess.getActionAccess().getDefaultDefaultKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getNameLOWER_CASE_IDTerminalRuleCall_0_1_0()); }
	RULE_LOWER_CASE_ID{ after(grammarAccess.getActionAccess().getNameLOWER_CASE_IDTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ParametersAssignment_0_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getParametersParameterParserRuleCall_0_3_0_0()); }
	ruleParameter{ after(grammarAccess.getActionAccess().getParametersParameterParserRuleCall_0_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ParametersAssignment_0_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getParametersParameterParserRuleCall_0_3_1_1_0()); }
	ruleParameter{ after(grammarAccess.getActionAccess().getParametersParameterParserRuleCall_0_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__BodyAssignment_0_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getBodyMethodStatementParserRuleCall_0_6_0()); }
	ruleMethodStatement{ after(grammarAccess.getActionAccess().getBodyMethodStatementParserRuleCall_0_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__NativeAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getNativeNativeKeyword_1_0_0_0()); }
(
{ before(grammarAccess.getActionAccess().getNativeNativeKeyword_1_0_0_0()); }

	'native' 

{ after(grammarAccess.getActionAccess().getNativeNativeKeyword_1_0_0_0()); }
)

{ after(grammarAccess.getActionAccess().getNativeNativeKeyword_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__DefaultAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getDefaultDefaultKeyword_1_0_1_0()); }
(
{ before(grammarAccess.getActionAccess().getDefaultDefaultKeyword_1_0_1_0()); }

	'default' 

{ after(grammarAccess.getActionAccess().getDefaultDefaultKeyword_1_0_1_0()); }
)

{ after(grammarAccess.getActionAccess().getDefaultDefaultKeyword_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getNameLOWER_CASE_IDTerminalRuleCall_1_1_0()); }
	RULE_LOWER_CASE_ID{ after(grammarAccess.getActionAccess().getNameLOWER_CASE_IDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ParametersAssignment_1_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getParametersParameterParserRuleCall_1_3_0_0()); }
	ruleParameter{ after(grammarAccess.getActionAccess().getParametersParameterParserRuleCall_1_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ParametersAssignment_1_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getParametersParameterParserRuleCall_1_3_1_1_0()); }
	ruleParameter{ after(grammarAccess.getActionAccess().getParametersParameterParserRuleCall_1_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getNameUPPER_CASE_IDTerminalRuleCall_1_0()); }
	RULE_UPPER_CASE_ID{ after(grammarAccess.getConstraintAccess().getNameUPPER_CASE_IDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__ParametersAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getParametersParameterParserRuleCall_2_1_0()); }
	ruleParameter{ after(grammarAccess.getConstraintAccess().getParametersParameterParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__ParametersAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getParametersParameterParserRuleCall_2_2_1_0()); }
	ruleParameter{ after(grammarAccess.getConstraintAccess().getParametersParameterParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getNameUPPER_CASE_IDTerminalRuleCall_1_0()); }
	RULE_UPPER_CASE_ID{ after(grammarAccess.getActorAccess().getNameUPPER_CASE_IDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__SuperTypesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getSuperTypesTypeParserRuleCall_2_1_0()); }
	ruleType{ after(grammarAccess.getActorAccess().getSuperTypesTypeParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__SuperTypesAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getSuperTypesTypeParserRuleCall_2_2_1_0()); }
	ruleType{ after(grammarAccess.getActorAccess().getSuperTypesTypeParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__HasBodyAssignment_3_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getHasBodyLeftCurlyBracketKeyword_3_0_0_0()); }
(
{ before(grammarAccess.getActorAccess().getHasBodyLeftCurlyBracketKeyword_3_0_0_0()); }

	'{' 

{ after(grammarAccess.getActorAccess().getHasBodyLeftCurlyBracketKeyword_3_0_0_0()); }
)

{ after(grammarAccess.getActorAccess().getHasBodyLeftCurlyBracketKeyword_3_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__BodyAssignment_3_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getBodyAttributeParserRuleCall_3_0_1_0()); }
	ruleAttribute{ after(grammarAccess.getActorAccess().getBodyAttributeParserRuleCall_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionCall__ReferencedElementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionCallAccess().getReferencedElementActionCrossReference_1_0()); }
(
{ before(grammarAccess.getActionCallAccess().getReferencedElementActionQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getActionCallAccess().getReferencedElementActionQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getActionCallAccess().getReferencedElementActionCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionCall__ParametersAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionCallAccess().getParametersExpressionParserRuleCall_3_0_0()); }
	ruleExpression{ after(grammarAccess.getActionCallAccess().getParametersExpressionParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionCall__ParametersAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionCallAccess().getParametersExpressionParserRuleCall_3_1_1_0()); }
	ruleExpression{ after(grammarAccess.getActionCallAccess().getParametersExpressionParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Page__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getNameUPPER_CASE_IDTerminalRuleCall_1_0()); }
	RULE_UPPER_CASE_ID{ after(grammarAccess.getPageAccess().getNameUPPER_CASE_IDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Page__ParametersAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getParametersParameterParserRuleCall_2_1_0_0()); }
	ruleParameter{ after(grammarAccess.getPageAccess().getParametersParameterParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Page__ParametersAssignment_2_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getParametersParameterParserRuleCall_2_1_1_1_0()); }
	ruleParameter{ after(grammarAccess.getPageAccess().getParametersParameterParserRuleCall_2_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Page__ControllerAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getControllerControllerCrossReference_4_0()); }
(
{ before(grammarAccess.getPageAccess().getControllerControllerQualifiedNameParserRuleCall_4_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getPageAccess().getControllerControllerQualifiedNameParserRuleCall_4_0_1()); }
)
{ after(grammarAccess.getPageAccess().getControllerControllerCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Page__HasBodyAssignment_5_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getHasBodyLeftCurlyBracketKeyword_5_0_0_0()); }
(
{ before(grammarAccess.getPageAccess().getHasBodyLeftCurlyBracketKeyword_5_0_0_0()); }

	'{' 

{ after(grammarAccess.getPageAccess().getHasBodyLeftCurlyBracketKeyword_5_0_0_0()); }
)

{ after(grammarAccess.getPageAccess().getHasBodyLeftCurlyBracketKeyword_5_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Page__BodyAssignment_5_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getBodyViewStatementParserRuleCall_5_0_1_0()); }
	ruleViewStatement{ after(grammarAccess.getPageAccess().getBodyViewStatementParserRuleCall_5_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Widget__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWidgetAccess().getNameUPPER_CASE_IDTerminalRuleCall_1_0()); }
	RULE_UPPER_CASE_ID{ after(grammarAccess.getWidgetAccess().getNameUPPER_CASE_IDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Widget__ParametersAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWidgetAccess().getParametersParameterParserRuleCall_2_1_0()); }
	ruleParameter{ after(grammarAccess.getWidgetAccess().getParametersParameterParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Widget__ParametersAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWidgetAccess().getParametersParameterParserRuleCall_2_2_1_0()); }
	ruleParameter{ after(grammarAccess.getWidgetAccess().getParametersParameterParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Widget__ControllerAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWidgetAccess().getControllerControllerCrossReference_3_1_0()); }
(
{ before(grammarAccess.getWidgetAccess().getControllerControllerQualifiedNameParserRuleCall_3_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getWidgetAccess().getControllerControllerQualifiedNameParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getWidgetAccess().getControllerControllerCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Widget__HasBodyAssignment_4_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWidgetAccess().getHasBodyLeftCurlyBracketKeyword_4_0_0_0()); }
(
{ before(grammarAccess.getWidgetAccess().getHasBodyLeftCurlyBracketKeyword_4_0_0_0()); }

	'{' 

{ after(grammarAccess.getWidgetAccess().getHasBodyLeftCurlyBracketKeyword_4_0_0_0()); }
)

{ after(grammarAccess.getWidgetAccess().getHasBodyLeftCurlyBracketKeyword_4_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Widget__BodyAssignment_4_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWidgetAccess().getBodyViewStatementParserRuleCall_4_0_1_0()); }
	ruleViewStatement{ after(grammarAccess.getWidgetAccess().getBodyViewStatementParserRuleCall_4_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfView__ConditionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfViewAccess().getConditionExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getIfViewAccess().getConditionExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfView__HasBodyAssignment_5_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfViewAccess().getHasBodyLeftCurlyBracketKeyword_5_0_0_0()); }
(
{ before(grammarAccess.getIfViewAccess().getHasBodyLeftCurlyBracketKeyword_5_0_0_0()); }

	'{' 

{ after(grammarAccess.getIfViewAccess().getHasBodyLeftCurlyBracketKeyword_5_0_0_0()); }
)

{ after(grammarAccess.getIfViewAccess().getHasBodyLeftCurlyBracketKeyword_5_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfView__BodyAssignment_5_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfViewAccess().getBodyViewStatementParserRuleCall_5_0_1_0()); }
	ruleViewStatement{ after(grammarAccess.getIfViewAccess().getBodyViewStatementParserRuleCall_5_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfView__BodyAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfViewAccess().getBodyViewStatementParserRuleCall_5_1_0()); }
	ruleViewStatement{ after(grammarAccess.getIfViewAccess().getBodyViewStatementParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForView__VariableAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForViewAccess().getVariableForVariableParserRuleCall_3_0()); }
	ruleForVariable{ after(grammarAccess.getForViewAccess().getVariableForVariableParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForView__CollectionAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForViewAccess().getCollectionReferenceParserRuleCall_5_0()); }
	ruleReference{ after(grammarAccess.getForViewAccess().getCollectionReferenceParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForView__HasBodyAssignment_7_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForViewAccess().getHasBodyLeftCurlyBracketKeyword_7_0_0_0()); }
(
{ before(grammarAccess.getForViewAccess().getHasBodyLeftCurlyBracketKeyword_7_0_0_0()); }

	'{' 

{ after(grammarAccess.getForViewAccess().getHasBodyLeftCurlyBracketKeyword_7_0_0_0()); }
)

{ after(grammarAccess.getForViewAccess().getHasBodyLeftCurlyBracketKeyword_7_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForView__BodyAssignment_7_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForViewAccess().getBodyViewStatementParserRuleCall_7_0_1_0()); }
	ruleViewStatement{ after(grammarAccess.getForViewAccess().getBodyViewStatementParserRuleCall_7_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForView__BodyAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForViewAccess().getBodyViewStatementParserRuleCall_7_1_0()); }
	ruleViewStatement{ after(grammarAccess.getForViewAccess().getBodyViewStatementParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForVariable__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForVariableAccess().getTypeTypeParserRuleCall_0_0()); }
	ruleType{ after(grammarAccess.getForVariableAccess().getTypeTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForVariable__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForVariableAccess().getNameLOWER_CASE_IDTerminalRuleCall_1_0()); }
	RULE_LOWER_CASE_ID{ after(grammarAccess.getForVariableAccess().getNameLOWER_CASE_IDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ViewInstanceNoAction__NameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewInstanceNoActionAccess().getNameLOWER_CASE_IDTerminalRuleCall_0_0_0()); }
	RULE_LOWER_CASE_ID{ after(grammarAccess.getViewInstanceNoActionAccess().getNameLOWER_CASE_IDTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ViewInstanceNoAction__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewInstanceNoActionAccess().getTypeWidgetTypeParserRuleCall_1_0()); }
	ruleWidgetType{ after(grammarAccess.getViewInstanceNoActionAccess().getTypeWidgetTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ViewInstanceNoAction__ParametersAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewInstanceNoActionAccess().getParametersExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getViewInstanceNoActionAccess().getParametersExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ViewInstanceNoAction__ParametersAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewInstanceNoActionAccess().getParametersExpressionParserRuleCall_2_2_1_0()); }
	ruleExpression{ after(grammarAccess.getViewInstanceNoActionAccess().getParametersExpressionParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ViewInstance__ActionCallAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewInstanceAccess().getActionCallActionCallParserRuleCall_1_0()); }
	ruleActionCall{ after(grammarAccess.getViewInstanceAccess().getActionCallActionCallParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ViewInstance__HasBodyAssignment_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewInstanceAccess().getHasBodyLeftCurlyBracketKeyword_2_0_0_0()); }
(
{ before(grammarAccess.getViewInstanceAccess().getHasBodyLeftCurlyBracketKeyword_2_0_0_0()); }

	'{' 

{ after(grammarAccess.getViewInstanceAccess().getHasBodyLeftCurlyBracketKeyword_2_0_0_0()); }
)

{ after(grammarAccess.getViewInstanceAccess().getHasBodyLeftCurlyBracketKeyword_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ViewInstance__BodyAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewInstanceAccess().getBodyViewStatementParserRuleCall_2_0_1_0()); }
	ruleViewStatement{ after(grammarAccess.getViewInstanceAccess().getBodyViewStatementParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedViewBlock__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedViewBlockAccess().getNameLOWER_CASE_IDTerminalRuleCall_0_0()); }
	RULE_LOWER_CASE_ID{ after(grammarAccess.getNamedViewBlockAccess().getNameLOWER_CASE_IDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedViewBlock__HasBodyAssignment_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedViewBlockAccess().getHasBodyLeftCurlyBracketKeyword_2_0_0_0()); }
(
{ before(grammarAccess.getNamedViewBlockAccess().getHasBodyLeftCurlyBracketKeyword_2_0_0_0()); }

	'{' 

{ after(grammarAccess.getNamedViewBlockAccess().getHasBodyLeftCurlyBracketKeyword_2_0_0_0()); }
)

{ after(grammarAccess.getNamedViewBlockAccess().getHasBodyLeftCurlyBracketKeyword_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedViewBlock__BodyAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedViewBlockAccess().getBodyViewStatementParserRuleCall_2_0_1_0()); }
	ruleViewStatement{ after(grammarAccess.getNamedViewBlockAccess().getBodyViewStatementParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedViewBlock__BodyAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedViewBlockAccess().getBodyViewStatementParserRuleCall_2_1_0()); }
	ruleViewStatement{ after(grammarAccess.getNamedViewBlockAccess().getBodyViewStatementParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WidgetType__ReferencedElementAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWidgetTypeAccess().getReferencedElementWidgetCrossReference_0()); }
(
{ before(grammarAccess.getWidgetTypeAccess().getReferencedElementWidgetUPPER_CASE_IDTerminalRuleCall_0_1()); }
	RULE_UPPER_CASE_ID{ after(grammarAccess.getWidgetTypeAccess().getReferencedElementWidgetUPPER_CASE_IDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getWidgetTypeAccess().getReferencedElementWidgetCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceStatement__SymbolAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceStatementAccess().getSymbolEqualsSignKeyword_1_1_0_0()); }
(
{ before(grammarAccess.getReferenceStatementAccess().getSymbolEqualsSignKeyword_1_1_0_0()); }

	'=' 

{ after(grammarAccess.getReferenceStatementAccess().getSymbolEqualsSignKeyword_1_1_0_0()); }
)

{ after(grammarAccess.getReferenceStatementAccess().getSymbolEqualsSignKeyword_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceStatement__SymbolAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceStatementAccess().getSymbolPlusSignEqualsSignKeyword_1_1_1_0()); }
(
{ before(grammarAccess.getReferenceStatementAccess().getSymbolPlusSignEqualsSignKeyword_1_1_1_0()); }

	'+=' 

{ after(grammarAccess.getReferenceStatementAccess().getSymbolPlusSignEqualsSignKeyword_1_1_1_0()); }
)

{ after(grammarAccess.getReferenceStatementAccess().getSymbolPlusSignEqualsSignKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceStatement__SymbolAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceStatementAccess().getSymbolHyphenMinusEqualsSignKeyword_1_1_2_0()); }
(
{ before(grammarAccess.getReferenceStatementAccess().getSymbolHyphenMinusEqualsSignKeyword_1_1_2_0()); }

	'-=' 

{ after(grammarAccess.getReferenceStatementAccess().getSymbolHyphenMinusEqualsSignKeyword_1_1_2_0()); }
)

{ after(grammarAccess.getReferenceStatementAccess().getSymbolHyphenMinusEqualsSignKeyword_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceStatement__SymbolAssignment_1_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceStatementAccess().getSymbolAsteriskEqualsSignKeyword_1_1_3_0()); }
(
{ before(grammarAccess.getReferenceStatementAccess().getSymbolAsteriskEqualsSignKeyword_1_1_3_0()); }

	'*=' 

{ after(grammarAccess.getReferenceStatementAccess().getSymbolAsteriskEqualsSignKeyword_1_1_3_0()); }
)

{ after(grammarAccess.getReferenceStatementAccess().getSymbolAsteriskEqualsSignKeyword_1_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceStatement__SymbolAssignment_1_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceStatementAccess().getSymbolSolidusEqualsSignKeyword_1_1_4_0()); }
(
{ before(grammarAccess.getReferenceStatementAccess().getSymbolSolidusEqualsSignKeyword_1_1_4_0()); }

	'/=' 

{ after(grammarAccess.getReferenceStatementAccess().getSymbolSolidusEqualsSignKeyword_1_1_4_0()); }
)

{ after(grammarAccess.getReferenceStatementAccess().getSymbolSolidusEqualsSignKeyword_1_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceStatement__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceStatementAccess().getRightExpressionParserRuleCall_1_2_0()); }
	ruleExpression{ after(grammarAccess.getReferenceStatementAccess().getRightExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If__ConditionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getConditionExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getIfAccess().getConditionExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If__HasBodyAssignment_5_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getHasBodyLeftCurlyBracketKeyword_5_0_0_0()); }
(
{ before(grammarAccess.getIfAccess().getHasBodyLeftCurlyBracketKeyword_5_0_0_0()); }

	'{' 

{ after(grammarAccess.getIfAccess().getHasBodyLeftCurlyBracketKeyword_5_0_0_0()); }
)

{ after(grammarAccess.getIfAccess().getHasBodyLeftCurlyBracketKeyword_5_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If__BodyAssignment_5_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getBodyMethodStatementParserRuleCall_5_0_1_0()); }
	ruleMethodStatement{ after(grammarAccess.getIfAccess().getBodyMethodStatementParserRuleCall_5_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If__BodyAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getBodyMethodStatementParserRuleCall_5_1_0()); }
	ruleMethodStatement{ after(grammarAccess.getIfAccess().getBodyMethodStatementParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If__ElseBodyAssignment_6_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getElseBodyMethodStatementParserRuleCall_6_1_0_1_0()); }
	ruleMethodStatement{ after(grammarAccess.getIfAccess().getElseBodyMethodStatementParserRuleCall_6_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If__ElseBodyAssignment_6_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getElseBodyMethodStatementParserRuleCall_6_1_1_0()); }
	ruleMethodStatement{ after(grammarAccess.getIfAccess().getElseBodyMethodStatementParserRuleCall_6_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__While__ConditionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getConditionExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getWhileAccess().getConditionExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__While__HasBodyAssignment_5_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getHasBodyLeftCurlyBracketKeyword_5_0_0_0()); }
(
{ before(grammarAccess.getWhileAccess().getHasBodyLeftCurlyBracketKeyword_5_0_0_0()); }

	'{' 

{ after(grammarAccess.getWhileAccess().getHasBodyLeftCurlyBracketKeyword_5_0_0_0()); }
)

{ after(grammarAccess.getWhileAccess().getHasBodyLeftCurlyBracketKeyword_5_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__While__BodyAssignment_5_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getBodyMethodStatementParserRuleCall_5_0_1_0()); }
	ruleMethodStatement{ after(grammarAccess.getWhileAccess().getBodyMethodStatementParserRuleCall_5_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__While__BodyAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getBodyMethodStatementParserRuleCall_5_1_0()); }
	ruleMethodStatement{ after(grammarAccess.getWhileAccess().getBodyMethodStatementParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For__VariableAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getVariableVariableParserRuleCall_3_0()); }
	ruleVariable{ after(grammarAccess.getForAccess().getVariableVariableParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For__CollectionAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getCollectionReferenceParserRuleCall_5_0()); }
	ruleReference{ after(grammarAccess.getForAccess().getCollectionReferenceParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For__HasBodyAssignment_7_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getHasBodyLeftCurlyBracketKeyword_7_0_0_0()); }
(
{ before(grammarAccess.getForAccess().getHasBodyLeftCurlyBracketKeyword_7_0_0_0()); }

	'{' 

{ after(grammarAccess.getForAccess().getHasBodyLeftCurlyBracketKeyword_7_0_0_0()); }
)

{ after(grammarAccess.getForAccess().getHasBodyLeftCurlyBracketKeyword_7_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For__BodyAssignment_7_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getBodyMethodStatementParserRuleCall_7_0_1_0()); }
	ruleMethodStatement{ after(grammarAccess.getForAccess().getBodyMethodStatementParserRuleCall_7_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For__BodyAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getBodyMethodStatementParserRuleCall_7_1_0()); }
	ruleMethodStatement{ after(grammarAccess.getForAccess().getBodyMethodStatementParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getTypeTypeParserRuleCall_0_0()); }
	ruleType{ after(grammarAccess.getVariableAccess().getTypeTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameLOWER_CASE_IDTerminalRuleCall_1_0()); }
	RULE_LOWER_CASE_ID{ after(grammarAccess.getVariableAccess().getNameLOWER_CASE_IDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__ValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getValueExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getVariableAccess().getValueExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Show__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShowAccess().getExpressionViewInstanceNoActionParserRuleCall_2_0()); }
	ruleViewInstanceNoAction{ after(grammarAccess.getShowAccess().getExpressionViewInstanceNoActionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__SymbolAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getSymbolVerticalLineVerticalLineKeyword_1_1_0()); }
(
{ before(grammarAccess.getExpressionAccess().getSymbolVerticalLineVerticalLineKeyword_1_1_0()); }

	'||' 

{ after(grammarAccess.getExpressionAccess().getSymbolVerticalLineVerticalLineKeyword_1_1_0()); }
)

{ after(grammarAccess.getExpressionAccess().getSymbolVerticalLineVerticalLineKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRightBoolTermParserRuleCall_1_2_0()); }
	ruleBoolTerm{ after(grammarAccess.getExpressionAccess().getRightBoolTermParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BoolTerm__SymbolAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolTermAccess().getSymbolAmpersandAmpersandKeyword_1_1_0()); }
(
{ before(grammarAccess.getBoolTermAccess().getSymbolAmpersandAmpersandKeyword_1_1_0()); }

	'&&' 

{ after(grammarAccess.getBoolTermAccess().getSymbolAmpersandAmpersandKeyword_1_1_0()); }
)

{ after(grammarAccess.getBoolTermAccess().getSymbolAmpersandAmpersandKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BoolTerm__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolTermAccess().getRightNegationParserRuleCall_1_2_0()); }
	ruleNegation{ after(grammarAccess.getBoolTermAccess().getRightNegationParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__SymbolAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegationAccess().getSymbolExclamationMarkKeyword_1_1_0()); }
(
{ before(grammarAccess.getNegationAccess().getSymbolExclamationMarkKeyword_1_1_0()); }

	'!' 

{ after(grammarAccess.getNegationAccess().getSymbolExclamationMarkKeyword_1_1_0()); }
)

{ after(grammarAccess.getNegationAccess().getSymbolExclamationMarkKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__ExpressionAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegationAccess().getExpressionNegationParserRuleCall_1_2_0()); }
	ruleNegation{ after(grammarAccess.getNegationAccess().getExpressionNegationParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__SymbolAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getSymbolLessThanSignEqualsSignKeyword_1_1_0_0()); }
(
{ before(grammarAccess.getComparisonAccess().getSymbolLessThanSignEqualsSignKeyword_1_1_0_0()); }

	'<=' 

{ after(grammarAccess.getComparisonAccess().getSymbolLessThanSignEqualsSignKeyword_1_1_0_0()); }
)

{ after(grammarAccess.getComparisonAccess().getSymbolLessThanSignEqualsSignKeyword_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__SymbolAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getSymbolGreaterThanSignEqualsSignKeyword_1_1_1_0()); }
(
{ before(grammarAccess.getComparisonAccess().getSymbolGreaterThanSignEqualsSignKeyword_1_1_1_0()); }

	'>=' 

{ after(grammarAccess.getComparisonAccess().getSymbolGreaterThanSignEqualsSignKeyword_1_1_1_0()); }
)

{ after(grammarAccess.getComparisonAccess().getSymbolGreaterThanSignEqualsSignKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__SymbolAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getSymbolGreaterThanSignKeyword_1_1_2_0()); }
(
{ before(grammarAccess.getComparisonAccess().getSymbolGreaterThanSignKeyword_1_1_2_0()); }

	'>' 

{ after(grammarAccess.getComparisonAccess().getSymbolGreaterThanSignKeyword_1_1_2_0()); }
)

{ after(grammarAccess.getComparisonAccess().getSymbolGreaterThanSignKeyword_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__SymbolAssignment_1_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getSymbolLessThanSignKeyword_1_1_3_0()); }
(
{ before(grammarAccess.getComparisonAccess().getSymbolLessThanSignKeyword_1_1_3_0()); }

	'<' 

{ after(grammarAccess.getComparisonAccess().getSymbolLessThanSignKeyword_1_1_3_0()); }
)

{ after(grammarAccess.getComparisonAccess().getSymbolLessThanSignKeyword_1_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__SymbolAssignment_1_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getSymbolExclamationMarkEqualsSignKeyword_1_1_4_0()); }
(
{ before(grammarAccess.getComparisonAccess().getSymbolExclamationMarkEqualsSignKeyword_1_1_4_0()); }

	'!=' 

{ after(grammarAccess.getComparisonAccess().getSymbolExclamationMarkEqualsSignKeyword_1_1_4_0()); }
)

{ after(grammarAccess.getComparisonAccess().getSymbolExclamationMarkEqualsSignKeyword_1_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__SymbolAssignment_1_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getSymbolEqualsSignEqualsSignKeyword_1_1_5_0()); }
(
{ before(grammarAccess.getComparisonAccess().getSymbolEqualsSignEqualsSignKeyword_1_1_5_0()); }

	'==' 

{ after(grammarAccess.getComparisonAccess().getSymbolEqualsSignEqualsSignKeyword_1_1_5_0()); }
)

{ after(grammarAccess.getComparisonAccess().getSymbolEqualsSignEqualsSignKeyword_1_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__SymbolAssignment_1_1_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getSymbolIsKeyword_1_1_6_0()); }
(
{ before(grammarAccess.getComparisonAccess().getSymbolIsKeyword_1_1_6_0()); }

	'is' 

{ after(grammarAccess.getComparisonAccess().getSymbolIsKeyword_1_1_6_0()); }
)

{ after(grammarAccess.getComparisonAccess().getSymbolIsKeyword_1_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__SymbolAssignment_1_1_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getSymbolAsKeyword_1_1_7_0()); }
(
{ before(grammarAccess.getComparisonAccess().getSymbolAsKeyword_1_1_7_0()); }

	'as' 

{ after(grammarAccess.getComparisonAccess().getSymbolAsKeyword_1_1_7_0()); }
)

{ after(grammarAccess.getComparisonAccess().getSymbolAsKeyword_1_1_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getRightArithmeticExpressionParserRuleCall_1_2_0()); }
	ruleArithmeticExpression{ after(grammarAccess.getComparisonAccess().getRightArithmeticExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__SymbolAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticExpressionAccess().getSymbolPlusSignKeyword_1_1_0_0()); }
(
{ before(grammarAccess.getArithmeticExpressionAccess().getSymbolPlusSignKeyword_1_1_0_0()); }

	'+' 

{ after(grammarAccess.getArithmeticExpressionAccess().getSymbolPlusSignKeyword_1_1_0_0()); }
)

{ after(grammarAccess.getArithmeticExpressionAccess().getSymbolPlusSignKeyword_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__SymbolAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticExpressionAccess().getSymbolHyphenMinusKeyword_1_1_1_0()); }
(
{ before(grammarAccess.getArithmeticExpressionAccess().getSymbolHyphenMinusKeyword_1_1_1_0()); }

	'-' 

{ after(grammarAccess.getArithmeticExpressionAccess().getSymbolHyphenMinusKeyword_1_1_1_0()); }
)

{ after(grammarAccess.getArithmeticExpressionAccess().getSymbolHyphenMinusKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticExpressionAccess().getRightTermParserRuleCall_1_2_0()); }
	ruleTerm{ after(grammarAccess.getArithmeticExpressionAccess().getRightTermParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__SymbolAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getSymbolAsteriskKeyword_1_1_0_0()); }
(
{ before(grammarAccess.getTermAccess().getSymbolAsteriskKeyword_1_1_0_0()); }

	'*' 

{ after(grammarAccess.getTermAccess().getSymbolAsteriskKeyword_1_1_0_0()); }
)

{ after(grammarAccess.getTermAccess().getSymbolAsteriskKeyword_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__SymbolAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getSymbolSolidusKeyword_1_1_1_0()); }
(
{ before(grammarAccess.getTermAccess().getSymbolSolidusKeyword_1_1_1_0()); }

	'/' 

{ after(grammarAccess.getTermAccess().getSymbolSolidusKeyword_1_1_1_0()); }
)

{ after(grammarAccess.getTermAccess().getSymbolSolidusKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__SymbolAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getSymbolPercentSignKeyword_1_1_2_0()); }
(
{ before(grammarAccess.getTermAccess().getSymbolPercentSignKeyword_1_1_2_0()); }

	'%' 

{ after(grammarAccess.getTermAccess().getSymbolPercentSignKeyword_1_1_2_0()); }
)

{ after(grammarAccess.getTermAccess().getSymbolPercentSignKeyword_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getRightNegativeParserRuleCall_1_2_0()); }
	ruleNegative{ after(grammarAccess.getTermAccess().getRightNegativeParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Negative__ExpressionAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegativeAccess().getExpressionNegativeParserRuleCall_1_2_0()); }
	ruleNegative{ after(grammarAccess.getNegativeAccess().getExpressionNegativeParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructInstance__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructInstanceAccess().getTypeTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getStructInstanceAccess().getTypeTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructInstance__ParametersAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructInstanceAccess().getParametersExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getStructInstanceAccess().getParametersExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructInstance__ParametersAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructInstanceAccess().getParametersExpressionParserRuleCall_2_2_1_0()); }
	ruleExpression{ after(grammarAccess.getStructInstanceAccess().getParametersExpressionParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedElementReference__TailAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedElementReferenceAccess().getTailReferenceTailParserRuleCall_1_0()); }
	ruleReferenceTail{ after(grammarAccess.getTypedElementReferenceAccess().getTailReferenceTailParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__ReferencedElementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getReferencedElementVariableTypeElementCrossReference_1_0()); }
(
{ before(grammarAccess.getVariableReferenceAccess().getReferencedElementVariableTypeElementLOWER_CASE_IDTerminalRuleCall_1_0_1()); }
	RULE_LOWER_CASE_ID{ after(grammarAccess.getVariableReferenceAccess().getReferencedElementVariableTypeElementLOWER_CASE_IDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getVariableReferenceAccess().getReferencedElementVariableTypeElementCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__ReferencedElementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getReferencedElementMethodCrossReference_1_0()); }
(
{ before(grammarAccess.getMethodCallAccess().getReferencedElementMethodLOWER_CASE_IDTerminalRuleCall_1_0_1()); }
	RULE_LOWER_CASE_ID{ after(grammarAccess.getMethodCallAccess().getReferencedElementMethodLOWER_CASE_IDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getMethodCallAccess().getReferencedElementMethodCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__ParametersAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getParametersExpressionParserRuleCall_3_0_0()); }
	ruleExpression{ after(grammarAccess.getMethodCallAccess().getParametersExpressionParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__ParametersAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getParametersExpressionParserRuleCall_3_1_1_0()); }
	ruleExpression{ after(grammarAccess.getMethodCallAccess().getParametersExpressionParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceReference__ReferencedElementAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceReferenceAccess().getReferencedElementResourceCrossReference_0()); }
(
{ before(grammarAccess.getResourceReferenceAccess().getReferencedElementResourceResourceNameParserRuleCall_0_1()); }
	ruleResourceName{ after(grammarAccess.getResourceReferenceAccess().getReferencedElementResourceResourceNameParserRuleCall_0_1()); }
)
{ after(grammarAccess.getResourceReferenceAccess().getReferencedElementResourceCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__LiteralAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringValueAccess().getLiteralSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringValueAccess().getLiteralSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FloatValue__LiteralAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatValueAccess().getLiteralDecimalParserRuleCall_0()); }
	ruleDecimal{ after(grammarAccess.getFloatValueAccess().getLiteralDecimalParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BoolValue__LiteralAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolValueAccess().getLiteralAlternatives_1_0()); }
(rule__BoolValue__LiteralAlternatives_1_0)
{ after(grammarAccess.getBoolValueAccess().getLiteralAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntValue__LiteralAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntValueAccess().getLiteralINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getIntValueAccess().getLiteralINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NullValue__LiteralAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullValueAccess().getLiteralNullKeyword_0()); }
(
{ before(grammarAccess.getNullValueAccess().getLiteralNullKeyword_0()); }

	'null' 

{ after(grammarAccess.getNullValueAccess().getLiteralNullKeyword_0()); }
)

{ after(grammarAccess.getNullValueAccess().getLiteralNullKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_UPPER_CASE_ID : 'A'..'Z' ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_LOWER_CASE_ID : '^'? ('a'..'z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_LINE : '--' '-'*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


